{"ast":null,"code":"/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\n'use strict';\n/**\n * Escape and wrap key so it is safe to use as a reactid\n *\n * @param {string} key to be escaped.\n * @return {string} the escaped key.\n */\n\nfunction escape(key) {\n  var escapeRegex = /[=:]/g;\n  var escaperLookup = {\n    '=': '=0',\n    ':': '=2'\n  };\n  var escapedString = ('' + key).replace(escapeRegex, function (match) {\n    return escaperLookup[match];\n  });\n  return '$' + escapedString;\n}\n/**\n * Unescape and unwrap key for human-readable display\n *\n * @param {string} key to unescape.\n * @return {string} the unescaped key.\n */\n\n\nfunction unescape(key) {\n  var unescapeRegex = /(=0|=2)/g;\n  var unescaperLookup = {\n    '=0': '=',\n    '=2': ':'\n  };\n  var keySubstring = key[0] === '.' && key[1] === '$' ? key.substring(2) : key.substring(1);\n  return ('' + keySubstring).replace(unescapeRegex, function (match) {\n    return unescaperLookup[match];\n  });\n}\n\nvar KeyEscapeUtils = {\n  escape: escape,\n  unescape: unescape\n};\nmodule.exports = KeyEscapeUtils;","map":{"version":3,"names":["escape","key","escapeRegex","escaperLookup","escapedString","replace","match","unescape","unescapeRegex","unescaperLookup","keySubstring","substring","KeyEscapeUtils","module","exports"],"sources":["C:/Users/xxter/Documents/Coding/smart-brain/node_modules/react-loading-screen/node_modules/react/lib/KeyEscapeUtils.js"],"sourcesContent":["/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\n\n'use strict';\n\n/**\n * Escape and wrap key so it is safe to use as a reactid\n *\n * @param {string} key to be escaped.\n * @return {string} the escaped key.\n */\n\nfunction escape(key) {\n  var escapeRegex = /[=:]/g;\n  var escaperLookup = {\n    '=': '=0',\n    ':': '=2'\n  };\n  var escapedString = ('' + key).replace(escapeRegex, function (match) {\n    return escaperLookup[match];\n  });\n\n  return '$' + escapedString;\n}\n\n/**\n * Unescape and unwrap key for human-readable display\n *\n * @param {string} key to unescape.\n * @return {string} the unescaped key.\n */\nfunction unescape(key) {\n  var unescapeRegex = /(=0|=2)/g;\n  var unescaperLookup = {\n    '=0': '=',\n    '=2': ':'\n  };\n  var keySubstring = key[0] === '.' && key[1] === '$' ? key.substring(2) : key.substring(1);\n\n  return ('' + keySubstring).replace(unescapeRegex, function (match) {\n    return unescaperLookup[match];\n  });\n}\n\nvar KeyEscapeUtils = {\n  escape: escape,\n  unescape: unescape\n};\n\nmodule.exports = KeyEscapeUtils;"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAASA,MAAT,CAAgBC,GAAhB,EAAqB;EACnB,IAAIC,WAAW,GAAG,OAAlB;EACA,IAAIC,aAAa,GAAG;IAClB,KAAK,IADa;IAElB,KAAK;EAFa,CAApB;EAIA,IAAIC,aAAa,GAAG,CAAC,KAAKH,GAAN,EAAWI,OAAX,CAAmBH,WAAnB,EAAgC,UAAUI,KAAV,EAAiB;IACnE,OAAOH,aAAa,CAACG,KAAD,CAApB;EACD,CAFmB,CAApB;EAIA,OAAO,MAAMF,aAAb;AACD;AAED;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASG,QAAT,CAAkBN,GAAlB,EAAuB;EACrB,IAAIO,aAAa,GAAG,UAApB;EACA,IAAIC,eAAe,GAAG;IACpB,MAAM,GADc;IAEpB,MAAM;EAFc,CAAtB;EAIA,IAAIC,YAAY,GAAGT,GAAG,CAAC,CAAD,CAAH,KAAW,GAAX,IAAkBA,GAAG,CAAC,CAAD,CAAH,KAAW,GAA7B,GAAmCA,GAAG,CAACU,SAAJ,CAAc,CAAd,CAAnC,GAAsDV,GAAG,CAACU,SAAJ,CAAc,CAAd,CAAzE;EAEA,OAAO,CAAC,KAAKD,YAAN,EAAoBL,OAApB,CAA4BG,aAA5B,EAA2C,UAAUF,KAAV,EAAiB;IACjE,OAAOG,eAAe,CAACH,KAAD,CAAtB;EACD,CAFM,CAAP;AAGD;;AAED,IAAIM,cAAc,GAAG;EACnBZ,MAAM,EAAEA,MADW;EAEnBO,QAAQ,EAAEA;AAFS,CAArB;AAKAM,MAAM,CAACC,OAAP,GAAiBF,cAAjB"},"metadata":{},"sourceType":"script"}