{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\xxter\\\\Documents\\\\Coding\\\\smart-brain\\\\src\\\\App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport Navigation from './components/Navigation/Navigation';\nimport Logo from './components/Logo/Logo';\nimport ImageLinkForm from './components/ImageLinkForm/ImageLinkForm';\nimport Rank from './components/Rank/Rank';\nimport FaceRecognition from './components/FaceRecognition/FaceRecognition';\nimport ParticlesBg from 'particles-bg';\nimport SignIn from './components/SignIn/SignIn';\nimport Register from './components/Register/Register';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.onRouteChange = route => {\n      if (route === 'signout') {\n        this.setState({\n          isSignedIn: false\n        });\n      } else if (route === 'home') {\n        this.setState({\n          isSignedIn: true\n        });\n      }\n\n      this.setState({\n        route: route\n      });\n    };\n\n    this.calculateFaceLocations = data => {\n      const image = document.getElementById('inputimage');\n      const width = Number(image.width);\n      const height = Number(image.height);\n      const faceRegions = data.outputs[0].data.regions;\n      const clarifaiFaces = faceRegions.map(region => {\n        return region.region_info.bounding_box;\n      });\n      const boxes = clarifaiFaces.map(bounding_box => {\n        return {\n          leftCol: bounding_box.left_col * width,\n          rightCol: width - bounding_box.right_col * width,\n          topRow: bounding_box.top_row * height,\n          bottomRow: height - bounding_box.bottom_row * height\n        };\n      });\n      return boxes;\n    };\n\n    this.calculateFaceLocation = data => {\n      const image = document.getElementById(\"inputimage\");\n      const width = Number(image.width);\n      const height = Number(image.height);\n      const clarifaiFace = JSON.parse(data, null, 2).outputs[0].data.regions[0].region_info.bounding_box;\n      return {\n        leftCol: clarifaiFace.left_col * width,\n        topRow: clarifaiFace.top_row * height,\n        rightCol: width - clarifaiFace.right_col * width,\n        bottomRow: height - clarifaiFace.bottom_row * height\n      };\n    };\n\n    this.displayFaceBox = box => {\n      this.setState({\n        box: box\n      });\n    };\n\n    this.onInputChange = event => {\n      this.setState({\n        input: event.target.value\n      });\n    };\n\n    this.onSubmit = () => {\n      this.setState({\n        imageUrl: this.state.input\n      });\n      const raw = JSON.stringify({\n        \"user_app_id\": {\n          \"user_id\": \"clarifai\",\n          \"app_id\": \"main\"\n        },\n        \"inputs\": [{\n          \"data\": {\n            \"image\": {\n              \"url\": this.state.input\n            }\n          }\n        }]\n      });\n      const requestOptions = {\n        method: 'POST',\n        headers: {\n          'Accept': 'application/json',\n          'Authorization': 'Key dc909b76df6646348782f475407e883b'\n        },\n        body: raw\n      }; // NOTE: MODEL_VERSION_ID is optional, you can also call prediction with the MODEL_ID only\n      // https://api.clarifai.com/v2/models/{YOUR_MODEL_ID}/outputs\n      // this will default to the latest version_id\n\n      fetch(`https://api.clarifai.com/v2/models/face-detection/versions/6dc7e46bc9124c5c8824be4822abe105/outputs`, requestOptions).then(response => response.text()).then(result => this.displayFaceBox(this.calculateFaceLocation(result))).catch(error => console.log('error', error));\n    };\n\n    this.state = {\n      input: '',\n      imageUrl: '',\n      box: {},\n      route: 'signin',\n      isSignedIn: false\n    };\n  }\n\n  render() {\n    const {\n      isSignedIn,\n      imageUrl,\n      route,\n      box\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ParticlesBg, {\n          color: \"#FFFFFF\",\n          num: 100,\n          type: \"cobweb\",\n          bg: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true), /*#__PURE__*/_jsxDEV(Navigation, {\n        isSignedIn: isSignedIn,\n        onRouteChange: this.onRouteChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }, this), route === 'home' ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Logo, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Rank, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 23\n        }, this), /*#__PURE__*/_jsxDEV(ImageLinkForm, {\n          onInputChange: this.onInputChange,\n          onSubmit: this.onSubmit\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(FaceRecognition, {\n          box: box,\n          imageUrl: imageUrl\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true) : route !== 'register' ? /*#__PURE__*/_jsxDEV(SignIn, {\n        onRouteChange: this.onRouteChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 17\n      }, this) : /*#__PURE__*/_jsxDEV(Register, {\n        onRouteChange: this.onRouteChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"names":["React","Component","Navigation","Logo","ImageLinkForm","Rank","FaceRecognition","ParticlesBg","SignIn","Register","App","constructor","onRouteChange","route","setState","isSignedIn","calculateFaceLocations","data","image","document","getElementById","width","Number","height","faceRegions","outputs","regions","clarifaiFaces","map","region","region_info","bounding_box","boxes","leftCol","left_col","rightCol","right_col","topRow","top_row","bottomRow","bottom_row","calculateFaceLocation","clarifaiFace","JSON","parse","displayFaceBox","box","onInputChange","event","input","target","value","onSubmit","imageUrl","state","raw","stringify","requestOptions","method","headers","body","fetch","then","response","text","result","catch","error","console","log","render"],"sources":["C:/Users/xxter/Documents/Coding/smart-brain/src/App.js"],"sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\nimport Navigation from './components/Navigation/Navigation';\nimport Logo from './components/Logo/Logo';\nimport ImageLinkForm from './components/ImageLinkForm/ImageLinkForm';\nimport Rank from './components/Rank/Rank';\nimport FaceRecognition from './components/FaceRecognition/FaceRecognition';\nimport ParticlesBg from 'particles-bg'\nimport SignIn from './components/SignIn/SignIn';\nimport Register from './components/Register/Register';\n\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      input: '',\n      imageUrl: '',\n      box: {},\n      route: 'signin',\n      isSignedIn: false\n    }\n  }\n\n  onRouteChange = (route) => {\n    if (route === 'signout') {\n      this.setState({ isSignedIn: false })\n    } else if (route === 'home') {\n      this.setState({ isSignedIn: true })\n    }\n    this.setState({ route: route })\n  }\n\n  calculateFaceLocations=(data)=>{\n    const image=document.getElementById('inputimage');\n    const width=Number(image.width);\n    const height=Number(image.height);\n    const faceRegions=data.outputs[0].data.regions;\n    const clarifaiFaces=faceRegions.map(region=>{\n      return region.region_info.bounding_box;\n    })\n    const boxes=clarifaiFaces.map(bounding_box=>{\n      return{\n        leftCol: bounding_box.left_col * width,\n        rightCol: width - (bounding_box.right_col * width),\n        topRow: bounding_box.top_row * height,\n        bottomRow: height - (bounding_box.bottom_row * height)\n      }\n    })\n    return boxes;\n  }\n  calculateFaceLocation = (data) => {\n    const image = document.getElementById(\"inputimage\");\n    const width = Number(image.width);\n    const height = Number(image.height);\n    const clarifaiFace = JSON\n      .parse(data, null, 2)\n      .outputs[0].data.regions[0]\n      .region_info.bounding_box;\n    return {\n      leftCol: clarifaiFace.left_col * width,\n      topRow: clarifaiFace.top_row * height,\n      rightCol: width - clarifaiFace.right_col * width,\n      bottomRow: height - clarifaiFace.bottom_row * height,\n    };\n  }\n\n\n  displayFaceBox = (box) => {\n    this.setState({ box: box });\n  }\n\n  onInputChange = (event) => {\n    this.setState({ input: event.target.value })\n  }\n\n  onSubmit = () => {\n    this.setState({ imageUrl: this.state.input })\n\n    const raw = JSON.stringify({\n      \"user_app_id\": {\n        \"user_id\": \"clarifai\",\n        \"app_id\": \"main\"\n      },\n      \"inputs\": [\n        {\n          \"data\": {\n            \"image\": {\n              \"url\": this.state.input\n            }\n          }\n        }\n      ]\n    });\n\n    const requestOptions = {\n      method: 'POST',\n      headers: {\n        'Accept': 'application/json',\n        'Authorization': 'Key dc909b76df6646348782f475407e883b'\n      },\n      body: raw\n    };\n\n    // NOTE: MODEL_VERSION_ID is optional, you can also call prediction with the MODEL_ID only\n    // https://api.clarifai.com/v2/models/{YOUR_MODEL_ID}/outputs\n    // this will default to the latest version_id\n\n    fetch(`https://api.clarifai.com/v2/models/face-detection/versions/6dc7e46bc9124c5c8824be4822abe105/outputs`, requestOptions)\n      .then(response => response.text())\n      .then(result => this.displayFaceBox(this.calculateFaceLocation(result)))\n      .catch(error => console.log('error', error));\n\n  }\n\n  render() {\n    const { isSignedIn, imageUrl, route, box } = this.state;\n    return (\n      <div className=\"App\" >\n        <>\n          <div>...</div>\n          <ParticlesBg\n            color=\"#FFFFFF\"\n            num={100}\n            type=\"cobweb\"\n            bg={true} />\n        </>\n        <Navigation\n          isSignedIn={isSignedIn}\n          onRouteChange={this.onRouteChange} />\n        {route === 'home'\n          ? <><Logo /><Rank />\n            <ImageLinkForm\n              onInputChange={this.onInputChange}\n              onSubmit={this.onSubmit} />\n            <FaceRecognition\n              box={box}\n              imageUrl={imageUrl} /></>\n          : (\n            route !== 'register'\n              ? <SignIn onRouteChange={this.onRouteChange} />\n              : <Register onRouteChange={this.onRouteChange} />\n          )\n\n        }\n      </div>\n    );\n  }\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}