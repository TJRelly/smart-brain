{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\xxter\\\\Documents\\\\Coding\\\\smart-brain\\\\src\\\\App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport Navigation from './components/Navigation/Navigation';\nimport Logo from './components/Logo/Logo';\nimport ImageLinkForm from './components/ImageLinkForm/ImageLinkForm';\nimport Rank from './components/Rank/Rank';\nimport FaceRecognition from './components/FaceRecognition/FaceRecognition';\nimport ParticlesBg from 'particles-bg';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.onInputChange = event => {\n      this.setState({\n        input: event.target.value\n      });\n    };\n\n    this.onSubmit = () => {\n      this.setState({\n        imageUrl: this.state.input\n      }); //////////////////////////////////////////////////////////////////////////////////////////\n      // In this section, we set the user authentication, app ID, model details, and the URL\n      // of the image we want as an input. Change these strings to run your own example.\n      /////////////////////////////////////////////////////////////////////////////////////////\n\n      const USER_ID = 'tjrelly'; // Your PAT (Personal Access Token) can be found in the portal under Authentification\n\n      const PAT = '31dd72ee57cc439caa35b87bb0203b2c';\n      const APP_ID = 'smart-brain-all-scopes'; // Change these to whatever model and image URL you want to use\n\n      const MODEL_ID = 'face-detection';\n      const MODEL_VERSION_ID = '6dc7e46bc9124c5c8824be4822abe105';\n      const IMAGE_URL = this.state.imageUrl; ///////////////////////////////////////////////////////////////////////////////////\n      // YOU DO NOT NEED TO CHANGE ANYTHING BELOW THIS LINE TO RUN THIS EXAMPLE\n      ///////////////////////////////////////////////////////////////////////////////////\n\n      const raw = JSON.stringify({\n        \"user_app_id\": {\n          \"user_id\": USER_ID,\n          \"app_id\": APP_ID\n        },\n        \"inputs\": [{\n          \"data\": {\n            \"image\": {\n              \"url\": IMAGE_URL\n            }\n          }\n        }]\n      });\n      const requestOptions = {\n        method: 'POST',\n        headers: {\n          'Accept': 'application/json',\n          'Authorization': 'Key ' + PAT\n        },\n        body: raw\n      }; // NOTE: MODEL_VERSION_ID is optional, you can also call prediction with the MODEL_ID only\n      // https://api.clarifai.com/v2/models/{YOUR_MODEL_ID}/outputs\n      // this will default to the latest version_id\n\n      fetch(\"https://api.clarifai.com/v2/models/\" + MODEL_ID + \"/versions/\" + MODEL_VERSION_ID + \"/outputs\", requestOptions).then(response => response.text()).then(result => console.log(result)).catch(error => console.log('error', error));\n    };\n\n    this.state = {\n      input: '',\n      imageUrl: ''\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ParticlesBg, {\n          color: \"#FFFFFF\",\n          num: 200,\n          type: \"cobweb\",\n          bg: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true), /*#__PURE__*/_jsxDEV(Navigation, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Logo, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Rank, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ImageLinkForm, {\n        onInputChange: this.onInputChange,\n        onSubmit: this.onSubmit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FaceRecognition, {\n        imageUrl: this.state.imageUrl\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"names":["React","Component","Navigation","Logo","ImageLinkForm","Rank","FaceRecognition","ParticlesBg","App","constructor","onInputChange","event","setState","input","target","value","onSubmit","imageUrl","state","USER_ID","PAT","APP_ID","MODEL_ID","MODEL_VERSION_ID","IMAGE_URL","raw","JSON","stringify","requestOptions","method","headers","body","fetch","then","response","text","result","console","log","catch","error","render"],"sources":["C:/Users/xxter/Documents/Coding/smart-brain/src/App.js"],"sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\nimport Navigation from './components/Navigation/Navigation';\nimport Logo from './components/Logo/Logo';\nimport ImageLinkForm from './components/ImageLinkForm/ImageLinkForm';\nimport Rank from './components/Rank/Rank';\nimport FaceRecognition from './components/FaceRecognition/FaceRecognition';\nimport ParticlesBg from 'particles-bg'\n\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      input: '',\n      imageUrl: '',\n    }\n  }\n\n  onInputChange = (event) => {\n    this.setState({ input: event.target.value })\n  }\n\n  onSubmit = () => {\n    this.setState({ imageUrl: this.state.input })\n    //////////////////////////////////////////////////////////////////////////////////////////\n    // In this section, we set the user authentication, app ID, model details, and the URL\n    // of the image we want as an input. Change these strings to run your own example.\n    /////////////////////////////////////////////////////////////////////////////////////////\n\n    const USER_ID = 'tjrelly';\n    // Your PAT (Personal Access Token) can be found in the portal under Authentification\n    const PAT = '31dd72ee57cc439caa35b87bb0203b2c';\n    const APP_ID = 'smart-brain-all-scopes';\n    // Change these to whatever model and image URL you want to use\n    const MODEL_ID = 'face-detection';\n    const MODEL_VERSION_ID = '6dc7e46bc9124c5c8824be4822abe105';\n    const IMAGE_URL = this.state.imageUrl;\n\n    ///////////////////////////////////////////////////////////////////////////////////\n    // YOU DO NOT NEED TO CHANGE ANYTHING BELOW THIS LINE TO RUN THIS EXAMPLE\n    ///////////////////////////////////////////////////////////////////////////////////\n\n    const raw = JSON.stringify({\n      \"user_app_id\": {\n        \"user_id\": USER_ID,\n        \"app_id\": APP_ID\n      },\n      \"inputs\": [\n        {\n          \"data\": {\n            \"image\": {\n              \"url\": IMAGE_URL\n            }\n          }\n        }\n      ]\n    });\n\n    const requestOptions = {\n      method: 'POST',\n      headers: {\n        'Accept': 'application/json',\n        'Authorization': 'Key ' + PAT\n      },\n      body: raw\n    };\n\n    // NOTE: MODEL_VERSION_ID is optional, you can also call prediction with the MODEL_ID only\n    // https://api.clarifai.com/v2/models/{YOUR_MODEL_ID}/outputs\n    // this will default to the latest version_id\n\n    fetch(\"https://api.clarifai.com/v2/models/\" + MODEL_ID + \"/versions/\" + MODEL_VERSION_ID + \"/outputs\", requestOptions)\n      .then(response => response.text())\n      .then(result => console.log(result))\n      .catch(error => console.log('error', error));\n\n  }\n\n  render() {\n    return (\n      <div className=\"App\" >\n        <>\n          <div>...</div>\n          <ParticlesBg\n            color=\"#FFFFFF\"\n            num={200}\n            type=\"cobweb\"\n            bg={true} />\n        </>\n        <Navigation />\n        <Logo />\n        <Rank />\n        <ImageLinkForm\n          onInputChange={this.onInputChange}\n          onSubmit={this.onSubmit}\n        />\n        <FaceRecognition imageUrl={this.state.imageUrl} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}