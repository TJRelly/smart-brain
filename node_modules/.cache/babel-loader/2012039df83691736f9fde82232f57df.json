{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\xxter\\\\Documents\\\\Coding\\\\smart-brain\\\\src\\\\App.js\";\nimport React, { Component } from \"react\";\nimport \"./App.css\";\nimport Navigation from \"./components/Navigation/Navigation\";\nimport Logo from \"./components/Logo/Logo\";\nimport ImageLinkForm from \"./components/ImageLinkForm/ImageLinkForm\";\nimport Rank from \"./components/Rank/Rank\";\nimport FaceRecognition from \"./components/FaceRecognition/FaceRecognition\";\nimport ParticlesBg from \"particles-bg\";\nimport SignIn from \"./components/SignIn/SignIn\";\nimport Register from \"./components/Register/Register\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst initialState = {\n  input: \"\",\n  imageUrl: \"\",\n  boxes: [],\n  route: \"signin\",\n  isSignedIn: false,\n  user: {\n    id: \"\",\n    name: \"\",\n    email: \"\",\n    entries: 0,\n    joined: \"\"\n  }\n};\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.loadUser = data => {\n      this.setState({\n        user: {\n          id: data.id,\n          name: data.name,\n          email: data.email,\n          entries: data.entries,\n          joined: data.joined\n        }\n      });\n    };\n\n    this.onRouteChange = route => {\n      if (route === \"signout\") {\n        this.setState(initialState);\n      } else if (route === \"home\") {\n        this.setState({\n          isSignedIn: true\n        });\n      }\n\n      this.setState({\n        route: route\n      });\n    };\n\n    this.calculateFaceLocation = data => {\n      const image = document.getElementById(\"inputimage\");\n      const width = Number(image.width);\n      const height = Number(image.height);\n      return JSON.parse(data, null, 2).outputs[0].data.regions.map(face => {\n        const clarifaiFace = face.region_info.bounding_box;\n        return {\n          leftCol: clarifaiFace.left_col * width,\n          topRow: clarifaiFace.top_row * height,\n          rightCol: width - clarifaiFace.right_col * width,\n          bottomRow: height - clarifaiFace.bottom_row * height\n        };\n      });\n    };\n\n    this.displayFaceBox = boxes => {\n      this.setState({\n        boxes: boxes\n      });\n    };\n\n    this.onInputChange = event => {\n      this.setState({\n        input: event.target.value\n      });\n    };\n\n    this.onSubmit = () => {\n      this.setState({\n        imageUrl: this.state.input\n      });\n\n      const returnClarifaiRequestOptions = imageUrl => {\n        const raw = JSON.stringify({\n          user_app_id: {\n            user_id: \"clarifai\",\n            app_id: \"main\"\n          },\n          inputs: [{\n            data: {\n              image: {\n                url: imageUrl\n              }\n            }\n          }]\n        });\n        const requestOptions = {\n          method: \"POST\",\n          headers: {\n            Accept: \"application/json\",\n            Authorization: \"Key dc909b76df6646348782f475407e883b\"\n          },\n          body: raw\n        };\n        console.log(\"Request options: \" + requestOptions);\n        return requestOptions;\n      };\n\n      fetch(`https://api.clarifai.com/v2/models/face-detection/outputs`, returnClarifaiRequestOptions(this.state.input)).then(response => response.text()).then(result => {\n        console.log(result);\n        this.displayFaceBox(this.calculateFaceLocation(result));\n\n        if (result) {\n          fetch(\"https://smart-brain-api.up.railway.app/image\", {\n            method: \"PUT\",\n            headers: {\n              \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify({\n              id: this.state.user.id\n            })\n          }).then(result => result.json()).then(count => {\n            this.setState(Object.assign(this.state.user, {\n              entries: count\n            }));\n          });\n        }\n      }).catch(error => console.log(\"error\", error));\n    };\n\n    this.state = initialState;\n  }\n\n  componentDidMount() {\n    fetch(\"http://localhost:3000/\").then(response => response.json());\n  }\n\n  render() {\n    const {\n      isSignedIn,\n      imageUrl,\n      route,\n      boxes\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(ParticlesBg, {\n        color: \"#FFFFFF\",\n        num: 100,\n        type: \"cobweb\",\n        bg: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Navigation, {\n        isSignedIn: isSignedIn,\n        onRouteChange: this.onRouteChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 9\n      }, this), route === \"home\" ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Logo, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Rank, {\n          name: this.state.user.name,\n          entries: this.state.user.entries\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(ImageLinkForm, {\n          onInputChange: this.onInputChange,\n          onSubmit: this.onSubmit\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(FaceRecognition, {\n          boxes: boxes,\n          imageUrl: imageUrl\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true) : route !== \"register\" ? /*#__PURE__*/_jsxDEV(SignIn, {\n        loadUser: this.loadUser,\n        onRouteChange: this.onRouteChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(Register, {\n        loadUser: this.loadUser,\n        onRouteChange: this.onRouteChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"names":["React","Component","Navigation","Logo","ImageLinkForm","Rank","FaceRecognition","ParticlesBg","SignIn","Register","initialState","input","imageUrl","boxes","route","isSignedIn","user","id","name","email","entries","joined","App","constructor","loadUser","data","setState","onRouteChange","calculateFaceLocation","image","document","getElementById","width","Number","height","JSON","parse","outputs","regions","map","face","clarifaiFace","region_info","bounding_box","leftCol","left_col","topRow","top_row","rightCol","right_col","bottomRow","bottom_row","displayFaceBox","onInputChange","event","target","value","onSubmit","state","returnClarifaiRequestOptions","raw","stringify","user_app_id","user_id","app_id","inputs","url","requestOptions","method","headers","Accept","Authorization","body","console","log","fetch","then","response","text","result","json","count","Object","assign","catch","error","componentDidMount","render"],"sources":["C:/Users/xxter/Documents/Coding/smart-brain/src/App.js"],"sourcesContent":["import React, { Component } from \"react\"\nimport \"./App.css\"\nimport Navigation from \"./components/Navigation/Navigation\"\nimport Logo from \"./components/Logo/Logo\"\nimport ImageLinkForm from \"./components/ImageLinkForm/ImageLinkForm\"\nimport Rank from \"./components/Rank/Rank\"\nimport FaceRecognition from \"./components/FaceRecognition/FaceRecognition\"\nimport ParticlesBg from \"particles-bg\"\nimport SignIn from \"./components/SignIn/SignIn\"\nimport Register from \"./components/Register/Register\"\n\nconst initialState = {\n  input: \"\",\n  imageUrl: \"\",\n  boxes: [],\n  route: \"signin\",\n  isSignedIn: false,\n  user: {\n    id: \"\",\n    name: \"\",\n    email: \"\",\n    entries: 0,\n    joined: \"\",\n  },\n}\n\nclass App extends Component {\n  constructor() {\n    super()\n    this.state = initialState\n  }\n\n  loadUser = (data) => {\n    this.setState({\n      user: {\n        id: data.id,\n        name: data.name,\n        email: data.email,\n        entries: data.entries,\n        joined: data.joined,\n      },\n    })\n  }\n\n  componentDidMount() {\n    fetch(\"http://localhost:3000/\").then((response) =>\n      response.json()\n    )\n  }\n\n  onRouteChange = (route) => {\n    if (route === \"signout\") {\n      this.setState(initialState)\n    } else if (route === \"home\") {\n      this.setState({ isSignedIn: true })\n    }\n    this.setState({ route: route })\n  }\n\n  calculateFaceLocation = (data) => {\n    const image = document.getElementById(\"inputimage\")\n    const width = Number(image.width)\n    const height = Number(image.height)\n    return JSON.parse(data, null, 2).outputs[0].data.regions.map((face) => {\n      const clarifaiFace = face.region_info.bounding_box\n      return {\n        leftCol: clarifaiFace.left_col * width,\n        topRow: clarifaiFace.top_row * height,\n        rightCol: width - clarifaiFace.right_col * width,\n        bottomRow: height - clarifaiFace.bottom_row * height,\n      }\n    })\n  }\n\n  displayFaceBox = (boxes) => {\n    this.setState({ boxes: boxes })\n  }\n\n  onInputChange = (event) => {\n    this.setState({ input: event.target.value })\n  }\n\n  onSubmit = () => {\n    this.setState({ imageUrl: this.state.input })\n\n    const returnClarifaiRequestOptions = (imageUrl) => {\n      const raw = JSON.stringify({\n        user_app_id: {\n          user_id: \"clarifai\",\n          app_id: \"main\",\n        },\n        inputs: [\n          {\n            data: {\n              image: {\n                url: imageUrl,\n              },\n            },\n          },\n        ],\n      })\n\n      const requestOptions = {\n        method: \"POST\",\n        headers: {\n          Accept: \"application/json\",\n          Authorization: \"Key dc909b76df6646348782f475407e883b\",\n        },\n        body: raw,\n      }\n      console.log(\"Request options: \" + requestOptions)\n      return requestOptions\n    }\n\n    fetch(\n      `https://api.clarifai.com/v2/models/face-detection/outputs`,\n      returnClarifaiRequestOptions(this.state.input)\n    )\n      .then((response) => response.text())\n      .then((result) => {\n        console.log(result)\n        this.displayFaceBox(this.calculateFaceLocation(result))\n        if (result) {\n          fetch(\"https://smart-brain-api.up.railway.app/image\", {\n            method: \"PUT\",\n            headers: { \"Content-Type\": \"application/json\" },\n            body: JSON.stringify({\n              id: this.state.user.id,\n            }),\n          })\n            .then((result) => result.json())\n            .then((count) => {\n              this.setState(Object.assign(this.state.user, { entries: count }))\n            })\n        }\n      })\n      .catch((error) => console.log(\"error\", error))\n  }\n\n  render() {\n    const { isSignedIn, imageUrl, route, boxes } = this.state\n    return (\n      <div className=\"App\">\n        <ParticlesBg color=\"#FFFFFF\" num={100} type=\"cobweb\" bg={true} />\n        <Navigation\n          isSignedIn={isSignedIn}\n          onRouteChange={this.onRouteChange}\n        />\n        {route === \"home\" ? (\n          <>\n            <Logo />\n            <Rank\n              name={this.state.user.name}\n              entries={this.state.user.entries}\n            />\n            <ImageLinkForm\n              onInputChange={this.onInputChange}\n              onSubmit={this.onSubmit}\n            />\n            <FaceRecognition boxes={boxes} imageUrl={imageUrl} />\n          </>\n        ) : route !== \"register\" ? (\n          <SignIn loadUser={this.loadUser} onRouteChange={this.onRouteChange} />\n        ) : (\n          <Register\n            loadUser={this.loadUser}\n            onRouteChange={this.onRouteChange}\n          />\n        )}\n      </div>\n    )\n  }\n}\n\nexport default App\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}