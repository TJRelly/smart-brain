{"ast":null,"code":"/*!\n* RAFManager v0.1.0\n*\n* Copyright 2018-2018, ajiemath <ajiemath@gmail.com>\n* Licensed under the MIT license\n* http://www.opensource.org/licenses/mit-license\n*\n*/\n!function (t, i) {\n  \"object\" == typeof exports && \"undefined\" != typeof module ? module.exports = i() : \"function\" == typeof define && define.amd ? define(i) : t.RAFManager = i();\n}(this, function () {\n  \"use strict\";\n\n  return function () {\n    for (var t = [\"ms\", \"moz\", \"webkit\", \"o\"], i = 0; i < t.length && !window.requestAnimationFrame; ++i) {\n      window.requestAnimationFrame = window[t[i] + \"RequestAnimationFrame\"], window.cancelAnimationFrame = window[t[i] + \"CancelAnimationFrame\"] || window[t[i] + \"CancelRequestAnimationFrame\"];\n    }\n  }(), {\n    timer: 0,\n    state: \"stop\",\n    animations: [],\n    add: function add(t) {\n      var i = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 60,\n          n = {\n        callback: t,\n        fps: i,\n        n: 60 / i,\n        param: arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : null,\n        i: 0\n      };\n      return this.animations.push(n), this.animations.length >= 1 && this.start(), this;\n    },\n    getIndex: function getIndex(t) {\n      for (var i = 0; i < this.animations.length; i++) {\n        if (this.animations[i].callback === t) return i;\n      }\n\n      return -1;\n    },\n    remove: function remove(t) {\n      if (!(this.getIndex(t) < 0)) return this.deleteMap(t), 0 === this.animations.length && this.stop(), this;\n    },\n    deleteMap: function deleteMap(t) {\n      var i = this.getIndex(t),\n          n = this.animations[i];\n\n      for (var e in n) {\n        delete n[e];\n      }\n\n      this.animations.splice(i, 1);\n    },\n    start: function start() {\n      if (\"start\" !== this.state) return this.state = \"start\", this.tick(), this;\n    },\n    stop: function stop() {\n      if (\"stop\" !== this.state) return this.state = \"stop\", cancelAnimationFrame(this.timer), this;\n    },\n    tick: function tick() {\n      var t = this;\n      this.timer = requestAnimationFrame(function () {\n        t.tick();\n      });\n\n      for (var i = 0; i < this.animations.length; i++) {\n        var n = this.animations[i],\n            e = n.callback,\n            a = n.param;\n        n.i++, n.i >= n.n && (e(a), n.i = 0);\n      }\n    }\n  };\n});","map":null,"metadata":{},"sourceType":"script"}