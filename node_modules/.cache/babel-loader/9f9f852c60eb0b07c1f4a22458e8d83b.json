{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\xxter\\\\Documents\\\\Coding\\\\smart-brain\\\\src\\\\App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport Navigation from './components/Navigation/Navigation';\nimport Logo from './components/Logo/Logo';\nimport ImageLinkForm from './components/ImageLinkForm/ImageLinkForm';\nimport Rank from './components/Rank/Rank';\nimport FaceRecognition from './components/FaceRecognition/FaceRecognition';\nimport ParticlesBg from 'particles-bg';\nimport SignIn from './components/SignIn/SignIn';\nimport Register from './components/Register/Register';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst initialState = {\n  input: '',\n  imageUrl: '',\n  boxes: [],\n  route: 'signin',\n  isSignedIn: false,\n  user: {\n    id: '',\n    name: '',\n    email: '',\n    entries: 0,\n    joined: ''\n  }\n};\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.loadUser = data => {\n      this.setState({\n        user: {\n          id: data.id,\n          name: data.name,\n          email: data.email,\n          entries: data.entries,\n          joined: data.joined\n        }\n      });\n    };\n\n    this.onRouteChange = route => {\n      if (route === 'signout') {\n        this.setState(initialState);\n      } else if (route === 'home') {\n        this.setState({\n          isSignedIn: true\n        });\n      }\n\n      this.setState({\n        route: route\n      });\n    };\n\n    this.calculateFaceLocation = data => {\n      const image = document.getElementById('inputimage');\n      const width = Number(image.width);\n      const height = Number(image.height);\n      return JSON.parse(data, null, 2).outputs[0].data.regions.map(face => {\n        const clarifaiFace = face.region_info.bounding_box;\n        return {\n          leftCol: clarifaiFace.left_col * width,\n          topRow: clarifaiFace.top_row * height,\n          rightCol: width - clarifaiFace.right_col * width,\n          bottomRow: height - clarifaiFace.bottom_row * height\n        };\n      });\n    };\n\n    this.displayFaceBox = boxes => {\n      this.setState({\n        boxes: boxes\n      });\n    };\n\n    this.onInputChange = event => {\n      this.setState({\n        input: event.target.value\n      });\n    };\n\n    this.onSubmit = () => {\n      const {\n        input\n      } = this.state;\n      this.setState({\n        imageUrl: input\n      });\n      fetch('/imageurl', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          input\n        })\n      }).then(response => response.json()).then(data => {\n        console.log(data.result);\n        this.displayFaceBox(this.calculateFaceLocation(data.result));\n\n        if (data.result) {\n          fetch('/image', {\n            method: 'PUT',\n            headers: {\n              'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n              id: this.state.user.id\n            })\n          }).then(response => response.json()).then(count => {\n            this.setState(prevState => ({\n              user: { ...prevState.user,\n                entries: count\n              }\n            }));\n          }).catch(console.log);\n        }\n      }).catch(console.log);\n    };\n\n    this.state = initialState;\n  }\n\n  componentDidMount() {\n    fetch('https://smart-brain-api-z87p.onrender.com/').then(response => response.json());\n  }\n\n  render() {\n    const {\n      isSignedIn,\n      imageUrl,\n      route,\n      boxes\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(GoogleOAuthProvider, {\n      clientId: \"289026730597-vund6inv87c7maq51oqjkh0l8mrmo9bu.apps.googleusercontent.com\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"App\",\n        children: [/*#__PURE__*/_jsxDEV(ParticlesBg, {\n          color: \"#FFFFFF\",\n          num: 100,\n          type: \"cobweb\",\n          bg: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Navigation, {\n          isSignedIn: isSignedIn,\n          onRouteChange: this.onRouteChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 11\n        }, this), route === 'home' ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(Logo, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Rank, {\n            name: this.state.user.name,\n            entries: this.state.user.entries\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(ImageLinkForm, {\n            onInputChange: this.onInputChange,\n            onSubmit: this.onSubmit\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(FaceRecognition, {\n            boxes: boxes,\n            imageUrl: imageUrl\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true) : route !== 'register' ? /*#__PURE__*/_jsxDEV(SignIn, {\n          loadUser: this.loadUser,\n          onRouteChange: this.onRouteChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 19\n        }, this) : /*#__PURE__*/_jsxDEV(Register, {\n          loadUser: this.loadUser,\n          onRouteChange: this.onRouteChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 19\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"names":["React","Component","Navigation","Logo","ImageLinkForm","Rank","FaceRecognition","ParticlesBg","SignIn","Register","initialState","input","imageUrl","boxes","route","isSignedIn","user","id","name","email","entries","joined","App","constructor","loadUser","data","setState","onRouteChange","calculateFaceLocation","image","document","getElementById","width","Number","height","JSON","parse","outputs","regions","map","face","clarifaiFace","region_info","bounding_box","leftCol","left_col","topRow","top_row","rightCol","right_col","bottomRow","bottom_row","displayFaceBox","onInputChange","event","target","value","onSubmit","state","fetch","method","headers","body","stringify","then","response","json","console","log","result","count","prevState","catch","componentDidMount","render"],"sources":["C:/Users/xxter/Documents/Coding/smart-brain/src/App.js"],"sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\nimport Navigation from './components/Navigation/Navigation';\nimport Logo from './components/Logo/Logo';\nimport ImageLinkForm from './components/ImageLinkForm/ImageLinkForm';\nimport Rank from './components/Rank/Rank';\nimport FaceRecognition from './components/FaceRecognition/FaceRecognition';\nimport ParticlesBg from 'particles-bg'\nimport SignIn from './components/SignIn/SignIn';\nimport Register from './components/Register/Register';\n\nconst initialState = {\n  input: '',\n  imageUrl: '',\n  boxes: [],\n  route: 'signin',\n  isSignedIn: false,\n  user: {\n    id: '',\n    name: '',\n    email: '',\n    entries: 0,\n    joined: ''\n  }\n}\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = initialState;\n  }\n\n  loadUser = (data) => {\n    this.setState({\n      user: {\n        id: data.id,\n        name: data.name,\n        email: data.email,\n        entries: data.entries,\n        joined: data.joined\n      }\n    })\n  }\n\n  componentDidMount() {\n    fetch('https://smart-brain-api-z87p.onrender.com/')\n      .then(response => response.json())\n  }\n\n  onRouteChange = (route) => {\n    if (route === 'signout') {\n      this.setState(initialState)\n    } else if (route === 'home') {\n      this.setState({ isSignedIn: true })\n    }\n    this.setState({ route: route })\n  }\n\n  calculateFaceLocation = data => {\n    const image = document.getElementById('inputimage');\n    const width = Number(image.width);\n    const height = Number(image.height);\n    return JSON\n      .parse(data, null, 2)\n      .outputs[0].data.regions\n      .map(face => {\n        const clarifaiFace = face.region_info.bounding_box;\n        return {\n          leftCol: clarifaiFace.left_col * width,\n          topRow: clarifaiFace.top_row * height,\n          rightCol: width - clarifaiFace.right_col * width,\n          bottomRow: height - clarifaiFace.bottom_row * height,\n        };\n      });\n  };\n\n  displayFaceBox = (boxes) => {\n    this.setState({ boxes: boxes });\n  }\n\n  onInputChange = (event) => {\n    this.setState({ input: event.target.value })\n  }\n\n  onSubmit = () => {\n    const { input } = this.state;\n\n    this.setState({ imageUrl: input });\n\n    fetch('/imageurl', {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({ input })\n    })\n      .then(response => response.json())\n      .then(data => {\n        console.log(data.result);\n        this.displayFaceBox(this.calculateFaceLocation(data.result));\n        if (data.result) {\n          fetch('/image', {\n            method: 'PUT',\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify({\n              id: this.state.user.id\n            })\n          })\n            .then(response => response.json())\n            .then(count => {\n              this.setState(prevState => ({\n                user: {\n                  ...prevState.user,\n                  entries: count\n                }\n              }));\n            })\n            .catch(console.log);\n        }\n      })\n      .catch(console.log);\n  };\n\n  render() {\n    const { isSignedIn, imageUrl, route, boxes } = this.state;\n\n    return (\n      <GoogleOAuthProvider clientId=\"289026730597-vund6inv87c7maq51oqjkh0l8mrmo9bu.apps.googleusercontent.com\">\n        <div className=\"App\" >\n          <ParticlesBg\n            color=\"#FFFFFF\"\n            num={100}\n            type=\"cobweb\"\n            bg={true}\n          />\n          <Navigation\n            isSignedIn={isSignedIn}\n            onRouteChange={this.onRouteChange}\n          />\n          {route === 'home'\n            ? <>\n              <Logo />\n              <Rank\n                name={this.state.user.name}\n                entries={this.state.user.entries}\n              />\n              <ImageLinkForm\n                onInputChange={this.onInputChange}\n                onSubmit={this.onSubmit}\n              />\n              <FaceRecognition\n                boxes={boxes}\n                imageUrl={imageUrl}\n              />\n            </>\n            : (\n              route !== 'register'\n                ? <SignIn\n                  loadUser={this.loadUser}\n                  onRouteChange={this.onRouteChange}\n                />\n                : <Register\n                  loadUser={this.loadUser}\n                  onRouteChange={this.onRouteChange}\n                />\n            )\n          }\n        </div>\n      </GoogleOAuthProvider>\n    );\n  }\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}