{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.searchParamsToUrlQuery = searchParamsToUrlQuery;\nexports.urlQueryToSearchParams = urlQueryToSearchParams;\nexports.assign = assign;\n\nfunction searchParamsToUrlQuery(searchParams) {\n  const query = {};\n  searchParams.forEach((value, key) => {\n    if (typeof query[key] === 'undefined') {\n      query[key] = value;\n    } else if (Array.isArray(query[key])) {\n      query[key].push(value);\n    } else {\n      query[key] = [query[key], value];\n    }\n  });\n  return query;\n}\n\nfunction stringifyUrlQueryParam(param) {\n  if (typeof param === 'string' || typeof param === 'number' && !isNaN(param) || typeof param === 'boolean') {\n    return String(param);\n  } else {\n    return '';\n  }\n}\n\nfunction urlQueryToSearchParams(urlQuery) {\n  const result = new URLSearchParams();\n  Object.entries(urlQuery).forEach(_ref => {\n    let [key, value] = _ref;\n\n    if (Array.isArray(value)) {\n      value.forEach(item => result.append(key, stringifyUrlQueryParam(item)));\n    } else {\n      result.set(key, stringifyUrlQueryParam(value));\n    }\n  });\n  return result;\n}\n\nfunction assign(target) {\n  for (var _len = arguments.length, searchParamsList = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    searchParamsList[_key - 1] = arguments[_key];\n  }\n\n  searchParamsList.forEach(searchParams => {\n    Array.from(searchParams.keys()).forEach(key => target.delete(key));\n    searchParams.forEach((value, key) => target.append(key, value));\n  });\n  return target;\n}","map":{"version":3,"mappings":"AAAA;;;;;QAEgBA;QA4BAC;QAcAC;;AA1CT,SAASF,sBAAT,CACLG,YADK,EAEW;EAChB,MAAMC,KAAK,GAAmB,EAA9B;EACAD,YAAY,CAACE,OAAbF,CAAqB,CAACG,KAAD,EAAQC,GAAR,KAAgB;IACnC,IAAI,OAAOH,KAAK,CAACG,GAAD,CAAZ,KAAsB,WAA1B,EAAuC;MACrCH,KAAK,CAACG,GAAD,CAALH,GAAaE,KAAbF;IACD,CAFD,MAEO,IAAII,KAAK,CAACC,OAAND,CAAcJ,KAAK,CAACG,GAAD,CAAnBC,CAAJ,EAA+B;MAClCJ,KAAK,CAACG,GAAD,CAALH,CAAwBM,IAAxBN,CAA6BE,KAA7BF;IACH,CAFM,MAEA;MACLA,KAAK,CAACG,GAAD,CAALH,GAAa,CAACA,KAAK,CAACG,GAAD,CAAN,EAAuBD,KAAvB,CAAbF;IACD;EACF,CARDD;EASA,OAAOC,KAAP;AACD;;AAED,SAASO,sBAAT,CAAgCC,KAAhC,EAAwD;EACtD,IACE,OAAOA,KAAP,KAAiB,QAAjB,IACC,OAAOA,KAAP,KAAiB,QAAjB,IAA6B,CAACC,KAAK,CAACD,KAAD,CADpC,IAEA,OAAOA,KAAP,KAAiB,SAHnB,EAIE;IACA,OAAOE,MAAM,CAACF,KAAD,CAAb;EACD,CAND,MAMO;IACL,OAAO,EAAP;EACD;AACF;;AAEM,SAASX,sBAAT,CACLc,QADK,EAEY;EACjB,MAAMC,MAAM,GAAG,IAAIC,eAAJ,EAAf;EACAC,MAAM,CAACC,OAAPD,CAAeH,QAAfG,EAAyBb,OAAzBa,CAAiC,QAAkB;IAAA,IAAjB,CAACX,GAAD,EAAMD,KAAN,CAAiB;;IACjD,IAAIE,KAAK,CAACC,OAAND,CAAcF,KAAdE,CAAJ,EAA0B;MACxBF,KAAK,CAACD,OAANC,CAAec,IAAD,IAAUJ,MAAM,CAACK,MAAPL,CAAcT,GAAdS,EAAmBL,sBAAsB,CAACS,IAAD,CAAzCJ,CAAxBV;IACD,CAFD,MAEO;MACLU,MAAM,CAACM,GAAPN,CAAWT,GAAXS,EAAgBL,sBAAsB,CAACL,KAAD,CAAtCU;IACD;EACF,CANDE;EAOA,OAAOF,MAAP;AACD;;AAEM,SAASd,MAAT,CACLqB,MADK,EAGY;EAAA,kCADdC,gBACc;IADdA,gBACc;EAAA;;EACjBA,gBAAgB,CAACnB,OAAjBmB,CAA0BrB,YAAD,IAAkB;IACzCK,KAAK,CAACiB,IAANjB,CAAWL,YAAY,CAACuB,IAAbvB,EAAXK,EAAgCH,OAAhCG,CAAyCD,GAAD,IAASgB,MAAM,CAACI,MAAPJ,CAAchB,GAAdgB,CAAjDf;IACAL,YAAY,CAACE,OAAbF,CAAqB,CAACG,KAAD,EAAQC,GAAR,KAAgBgB,MAAM,CAACF,MAAPE,CAAchB,GAAdgB,EAAmBjB,KAAnBiB,CAArCpB;EACD,CAHDqB;EAIA,OAAOD,MAAP;AACD","names":["searchParamsToUrlQuery","urlQueryToSearchParams","assign","searchParams","query","forEach","value","key","Array","isArray","push","stringifyUrlQueryParam","param","isNaN","String","urlQuery","result","URLSearchParams","Object","entries","item","append","set","target","searchParamsList","from","keys","delete"],"sources":["../../../../../../src/shared/lib/router/utils/querystring.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}