{"ast":null,"code":"'use strict';\n\nvar MAX_BATCH_SIZE = 128;\nvar GEO_LIMIT_TYPES = ['withinMiles', 'withinKilometers', 'withinRadians', 'withinDegrees'];\nvar SYNC_TIMEOUT = 360000; // 6 minutes\n\nvar MODEL_QUEUED_FOR_TRAINING = '21103';\nvar MODEL_TRAINING = '21101';\nvar POLLTIME = 2000;\nmodule.exports = {\n  API: {\n    TOKEN_PATH: '/token',\n    MODELS_PATH: '/models',\n    MODEL_PATH: '/models/$0',\n    MODEL_VERSIONS_PATH: '/models/$0/versions',\n    MODEL_VERSION_PATH: '/models/$0/versions/$1',\n    MODEL_PATCH_PATH: '/models/$0/output_info/data/concepts',\n    MODEL_OUTPUT_PATH: '/models/$0/output_info',\n    MODEL_VERSION_OUTPUT_PATH: '/models/$0/versions/$1/output_info',\n    MODEL_SEARCH_PATH: '/models/searches',\n    MODEL_FEEDBACK_PATH: '/models/$0/feedback',\n    MODEL_VERSION_FEEDBACK_PATH: '/models/$0/versions/$1/feedback',\n    PREDICT_PATH: '/models/$0/outputs',\n    VERSION_PREDICT_PATH: '/models/$0/versions/$1/outputs',\n    CONCEPTS_PATH: '/concepts',\n    CONCEPT_PATH: '/concepts/$0',\n    CONCEPT_SEARCH_PATH: '/concepts/searches',\n    MODEL_INPUTS_PATH: '/models/$0/inputs',\n    MODEL_VERSION_INPUTS_PATH: '/models/$0/versions/$1/inputs',\n    MODEL_VERSION_METRICS_PATH: '/models/$0/versions/$1/metrics',\n    INPUTS_PATH: '/inputs',\n    INPUT_PATH: '/inputs/$0',\n    INPUTS_STATUS_PATH: '/inputs/status',\n    SEARCH_PATH: '/searches',\n    SEARCH_FEEDBACK_PATH: '/searches/feedback',\n    WORKFLOWS_PATH: '/workflows',\n    WORKFLOW_PATH: '/workflows/$0',\n    WORKFLOW_RESULTS_PATH: '/workflows/$0/results'\n  },\n  ERRORS: {\n    paramsRequired: function paramsRequired(param) {\n      var paramList = Array.isArray(param) ? param : [param];\n      return new Error('The following ' + (paramList.length > 1 ? 'params are' : 'param is') + ' required: ' + paramList.join(', '));\n    },\n    MAX_INPUTS: new Error('Number of inputs passed exceeded max of ' + MAX_BATCH_SIZE),\n    INVALID_GEOLIMIT_TYPE: new Error('Incorrect geo_limit type. Value must be any of the following: ' + GEO_LIMIT_TYPES.join(', ')),\n    INVALID_DELETE_ARGS: new Error('Wrong arguments passed. You can only delete all models (provide no arguments), delete select models (provide list of ids),\\n    delete a single model (providing a single id) or delete a model version (provide a single id and version id)')\n  },\n  STATUS: {\n    MODEL_QUEUED_FOR_TRAINING: MODEL_QUEUED_FOR_TRAINING,\n    MODEL_TRAINING: MODEL_TRAINING\n  },\n  // var replacement must be given in order\n  replaceVars: function replaceVars(path) {\n    var vars = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n    var newPath = path;\n    vars.forEach(function (val, index) {\n      if (index === 0) {\n        val = encodeURIComponent(val);\n      }\n\n      newPath = newPath.replace(new RegExp('\\\\$' + index, 'g'), val);\n    });\n    return newPath;\n  },\n  getBasePath: function getBasePath() {\n    var apiEndpoint = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'https://api.clarifai.com';\n    var userId = arguments[1];\n    var appId = arguments[2];\n\n    if (!userId || !appId) {\n      return apiEndpoint + '/v2';\n    }\n\n    return apiEndpoint + '/v2/users/' + userId + '/apps/' + appId;\n  },\n  GEO_LIMIT_TYPES: GEO_LIMIT_TYPES,\n  MAX_BATCH_SIZE: MAX_BATCH_SIZE,\n  SYNC_TIMEOUT: SYNC_TIMEOUT,\n  POLLTIME: POLLTIME\n};","map":{"version":3,"names":["MAX_BATCH_SIZE","GEO_LIMIT_TYPES","SYNC_TIMEOUT","MODEL_QUEUED_FOR_TRAINING","MODEL_TRAINING","POLLTIME","module","exports","API","TOKEN_PATH","MODELS_PATH","MODEL_PATH","MODEL_VERSIONS_PATH","MODEL_VERSION_PATH","MODEL_PATCH_PATH","MODEL_OUTPUT_PATH","MODEL_VERSION_OUTPUT_PATH","MODEL_SEARCH_PATH","MODEL_FEEDBACK_PATH","MODEL_VERSION_FEEDBACK_PATH","PREDICT_PATH","VERSION_PREDICT_PATH","CONCEPTS_PATH","CONCEPT_PATH","CONCEPT_SEARCH_PATH","MODEL_INPUTS_PATH","MODEL_VERSION_INPUTS_PATH","MODEL_VERSION_METRICS_PATH","INPUTS_PATH","INPUT_PATH","INPUTS_STATUS_PATH","SEARCH_PATH","SEARCH_FEEDBACK_PATH","WORKFLOWS_PATH","WORKFLOW_PATH","WORKFLOW_RESULTS_PATH","ERRORS","paramsRequired","param","paramList","Array","isArray","Error","length","join","MAX_INPUTS","INVALID_GEOLIMIT_TYPE","INVALID_DELETE_ARGS","STATUS","replaceVars","path","vars","arguments","undefined","newPath","forEach","val","index","encodeURIComponent","replace","RegExp","getBasePath","apiEndpoint","userId","appId"],"sources":["C:/Users/xxter/Documents/Coding/smart-brain/node_modules/clarifai/dist/constants.js"],"sourcesContent":["'use strict';\n\nvar MAX_BATCH_SIZE = 128;\nvar GEO_LIMIT_TYPES = ['withinMiles', 'withinKilometers', 'withinRadians', 'withinDegrees'];\nvar SYNC_TIMEOUT = 360000; // 6 minutes\nvar MODEL_QUEUED_FOR_TRAINING = '21103';\nvar MODEL_TRAINING = '21101';\nvar POLLTIME = 2000;\n\nmodule.exports = {\n  API: {\n    TOKEN_PATH: '/token',\n    MODELS_PATH: '/models',\n    MODEL_PATH: '/models/$0',\n    MODEL_VERSIONS_PATH: '/models/$0/versions',\n    MODEL_VERSION_PATH: '/models/$0/versions/$1',\n    MODEL_PATCH_PATH: '/models/$0/output_info/data/concepts',\n    MODEL_OUTPUT_PATH: '/models/$0/output_info',\n    MODEL_VERSION_OUTPUT_PATH: '/models/$0/versions/$1/output_info',\n    MODEL_SEARCH_PATH: '/models/searches',\n    MODEL_FEEDBACK_PATH: '/models/$0/feedback',\n    MODEL_VERSION_FEEDBACK_PATH: '/models/$0/versions/$1/feedback',\n    PREDICT_PATH: '/models/$0/outputs',\n    VERSION_PREDICT_PATH: '/models/$0/versions/$1/outputs',\n    CONCEPTS_PATH: '/concepts',\n    CONCEPT_PATH: '/concepts/$0',\n    CONCEPT_SEARCH_PATH: '/concepts/searches',\n    MODEL_INPUTS_PATH: '/models/$0/inputs',\n    MODEL_VERSION_INPUTS_PATH: '/models/$0/versions/$1/inputs',\n    MODEL_VERSION_METRICS_PATH: '/models/$0/versions/$1/metrics',\n    INPUTS_PATH: '/inputs',\n    INPUT_PATH: '/inputs/$0',\n    INPUTS_STATUS_PATH: '/inputs/status',\n    SEARCH_PATH: '/searches',\n    SEARCH_FEEDBACK_PATH: '/searches/feedback',\n    WORKFLOWS_PATH: '/workflows',\n    WORKFLOW_PATH: '/workflows/$0',\n    WORKFLOW_RESULTS_PATH: '/workflows/$0/results'\n  },\n  ERRORS: {\n    paramsRequired: function paramsRequired(param) {\n      var paramList = Array.isArray(param) ? param : [param];\n      return new Error('The following ' + (paramList.length > 1 ? 'params are' : 'param is') + ' required: ' + paramList.join(', '));\n    },\n    MAX_INPUTS: new Error('Number of inputs passed exceeded max of ' + MAX_BATCH_SIZE),\n    INVALID_GEOLIMIT_TYPE: new Error('Incorrect geo_limit type. Value must be any of the following: ' + GEO_LIMIT_TYPES.join(', ')),\n    INVALID_DELETE_ARGS: new Error('Wrong arguments passed. You can only delete all models (provide no arguments), delete select models (provide list of ids),\\n    delete a single model (providing a single id) or delete a model version (provide a single id and version id)')\n  },\n  STATUS: {\n    MODEL_QUEUED_FOR_TRAINING: MODEL_QUEUED_FOR_TRAINING,\n    MODEL_TRAINING: MODEL_TRAINING\n  },\n  // var replacement must be given in order\n  replaceVars: function replaceVars(path) {\n    var vars = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n\n    var newPath = path;\n    vars.forEach(function (val, index) {\n      if (index === 0) {\n        val = encodeURIComponent(val);\n      }\n      newPath = newPath.replace(new RegExp('\\\\$' + index, 'g'), val);\n    });\n    return newPath;\n  },\n  getBasePath: function getBasePath() {\n    var apiEndpoint = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'https://api.clarifai.com';\n    var userId = arguments[1];\n    var appId = arguments[2];\n\n    if (!userId || !appId) {\n      return apiEndpoint + '/v2';\n    }\n    return apiEndpoint + '/v2/users/' + userId + '/apps/' + appId;\n  },\n  GEO_LIMIT_TYPES: GEO_LIMIT_TYPES,\n  MAX_BATCH_SIZE: MAX_BATCH_SIZE,\n  SYNC_TIMEOUT: SYNC_TIMEOUT,\n  POLLTIME: POLLTIME\n};"],"mappings":"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"},"metadata":{},"sourceType":"script"}