{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\xxter\\\\Documents\\\\Coding\\\\smart-brain\\\\src\\\\App.js\";\nimport React, { useState, useEffect, Component } from 'react';\nimport './App.css';\nimport Navigation from './components/Navigation/Navigation';\nimport Logo from './components/Logo/Logo';\nimport ImageLinkForm from './components/ImageLinkForm/ImageLinkForm';\nimport Rank from './components/Rank/Rank';\nimport FaceRecognition from './components/FaceRecognition/FaceRecognition';\nimport ParticlesBg from 'particles-bg';\nimport SignIn from './components/SignIn/SignIn';\nimport Register from './components/Register/Register';\nimport ClipLoader from 'react-spinners/ClipLoader';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.loadUser = data => {\n      this.setState({\n        user: {\n          id: data.id,\n          name: data.name,\n          email: data.email,\n          entries: data.entries,\n          joined: data.joined\n        }\n      });\n    };\n\n    this.onRouteChange = route => {\n      if (route === 'signout') {\n        this.setState({\n          isSignedIn: false\n        });\n      } else if (route === 'home') {\n        this.setState({\n          isSignedIn: true\n        });\n      }\n\n      this.setState({\n        loadingInProgress: true\n      });\n      this.setState({\n        route: route\n      });\n    };\n\n    this.calculateFaceLocation = data => {\n      const image = document.getElementById('inputimage');\n      const width = Number(image.width);\n      const height = Number(image.height);\n      return JSON.parse(data, null, 2).outputs[0].data.regions.map(face => {\n        const clarifaiFace = face.region_info.bounding_box;\n        return {\n          leftCol: clarifaiFace.left_col * width,\n          topRow: clarifaiFace.top_row * height,\n          rightCol: width - clarifaiFace.right_col * width,\n          bottomRow: height - clarifaiFace.bottom_row * height\n        };\n      });\n    };\n\n    this.displayFaceBox = boxes => {\n      this.setState({\n        boxes: boxes\n      });\n    };\n\n    this.onInputChange = event => {\n      this.setState({\n        input: event.target.value\n      });\n    };\n\n    this.onSubmit = () => {\n      this.setState({\n        imageUrl: this.state.input\n      });\n      const raw = JSON.stringify({\n        \"user_app_id\": {\n          \"user_id\": \"clarifai\",\n          \"app_id\": \"main\"\n        },\n        \"inputs\": [{\n          \"data\": {\n            \"image\": {\n              \"url\": this.state.input\n            }\n          }\n        }]\n      });\n      const requestOptions = {\n        method: 'POST',\n        headers: {\n          'Accept': 'application/json',\n          'Authorization': 'Key dc909b76df6646348782f475407e883b'\n        },\n        body: raw\n      }; // NOTE: MODEL_VERSION_ID is optional, you can also call prediction with the MODEL_ID only\n      // https://api.clarifai.com/v2/models/{YOUR_MODEL_ID}/outputs\n      // this will default to the latest version_id\n\n      fetch(`https://api.clarifai.com/v2/models/face-detection/versions/6dc7e46bc9124c5c8824be4822abe105/outputs`, requestOptions).then(response => response.text()).then(result => {\n        this.displayFaceBox(this.calculateFaceLocation(result));\n\n        if (result) {\n          fetch('http://localhost:3000/image', {\n            method: 'PUT',\n            headers: {\n              'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n              id: this.state.user.id\n            })\n          }).then(result => result.json()).then(count => {\n            this.setState(Object.assign(this.state.user, {\n              entries: count\n            }));\n          });\n        }\n      }).catch(error => console.log('error', error));\n    };\n\n    this.state = {\n      input: '',\n      imageUrl: '',\n      boxes: [],\n      route: 'signin',\n      isSignedIn: false,\n      loadingInProgress: false,\n      setLoading: false,\n      user: {\n        id: '',\n        name: '',\n        email: '',\n        entries: 0,\n        joined: ''\n      }\n    };\n  }\n\n  componentDidMount() {\n    fetch('http://localhost:3000').then(response => response.json()).then(console.log);\n  }\n\n  render() {\n    const {\n      isSignedIn,\n      imageUrl,\n      route,\n      boxes,\n      loadingInProgress\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: loadingInProgress ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loader-container\",\n        children: /*#__PURE__*/_jsxDEV(ClipLoader, {\n          color: '#fff',\n          size: 150\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"App\",\n        children: [/*#__PURE__*/_jsxDEV(ParticlesBg, {\n          color: \"#FFFFFF\",\n          num: 100,\n          type: \"cobweb\",\n          bg: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Navigation, {\n          isSignedIn: isSignedIn,\n          onRouteChange: this.onRouteChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 13\n        }, this), route === 'home' ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(Logo, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Rank, {\n            name: this.state.user.name,\n            entries: this.state.user.entries\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(ImageLinkForm, {\n            onInputChange: this.onInputChange,\n            onSubmit: this.onSubmit\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(FaceRecognition, {\n            boxes: boxes,\n            imageUrl: imageUrl\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true) : route !== 'register' ? /*#__PURE__*/_jsxDEV(SignIn, {\n          loadUser: this.loadUser,\n          onRouteChange: this.onRouteChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 21\n        }, this) : /*#__PURE__*/_jsxDEV(Register, {\n          loadUser: this.loadUser,\n          onRouteChange: this.onRouteChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"names":["React","useState","useEffect","Component","Navigation","Logo","ImageLinkForm","Rank","FaceRecognition","ParticlesBg","SignIn","Register","ClipLoader","App","constructor","loadUser","data","setState","user","id","name","email","entries","joined","onRouteChange","route","isSignedIn","loadingInProgress","calculateFaceLocation","image","document","getElementById","width","Number","height","JSON","parse","outputs","regions","map","face","clarifaiFace","region_info","bounding_box","leftCol","left_col","topRow","top_row","rightCol","right_col","bottomRow","bottom_row","displayFaceBox","boxes","onInputChange","event","input","target","value","onSubmit","imageUrl","state","raw","stringify","requestOptions","method","headers","body","fetch","then","response","text","result","json","count","Object","assign","catch","error","console","log","setLoading","componentDidMount","render"],"sources":["C:/Users/xxter/Documents/Coding/smart-brain/src/App.js"],"sourcesContent":["import React, { useState, useEffect, Component } from 'react';\nimport './App.css';\nimport Navigation from './components/Navigation/Navigation';\nimport Logo from './components/Logo/Logo';\nimport ImageLinkForm from './components/ImageLinkForm/ImageLinkForm';\nimport Rank from './components/Rank/Rank';\nimport FaceRecognition from './components/FaceRecognition/FaceRecognition';\nimport ParticlesBg from 'particles-bg'\nimport SignIn from './components/SignIn/SignIn';\nimport Register from './components/Register/Register';\nimport ClipLoader from 'react-spinners/ClipLoader';\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      input: '',\n      imageUrl: '',\n      boxes: [],\n      route: 'signin',\n      isSignedIn: false,\n      loadingInProgress: false,\n      setLoading: false,\n      user: {\n        id: '',\n        name: '',\n        email: '',\n        entries: 0,\n        joined: ''\n      }\n    }\n  }\n\n  loadUser = (data) => {\n    this.setState({\n      user: {\n        id: data.id,\n        name: data.name,\n        email: data.email,\n        entries: data.entries,\n        joined: data.joined\n      }\n    })\n  }\n\n  componentDidMount() {\n    fetch('http://localhost:3000')\n      .then(response => response.json())\n      .then(console.log)\n  }\n\n  onRouteChange = (route) => {\n    if (route === 'signout') {\n      this.setState({ isSignedIn: false })\n    } else if (route === 'home') {\n      this.setState({ isSignedIn: true })\n\n    }\n    this.setState({ loadingInProgress: true })\n    this.setState({ route: route })\n  }\n\n  calculateFaceLocation = data => {\n    const image = document.getElementById('inputimage');\n    const width = Number(image.width);\n    const height = Number(image.height);\n    return JSON\n      .parse(data, null, 2)\n      .outputs[0].data.regions\n      .map(face => {\n        const clarifaiFace = face.region_info.bounding_box;\n        return {\n          leftCol: clarifaiFace.left_col * width,\n          topRow: clarifaiFace.top_row * height,\n          rightCol: width - clarifaiFace.right_col * width,\n          bottomRow: height - clarifaiFace.bottom_row * height,\n        };\n      });\n  };\n\n  displayFaceBox = (boxes) => {\n    this.setState({ boxes: boxes });\n  }\n\n  onInputChange = (event) => {\n    this.setState({ input: event.target.value })\n  }\n\n  onSubmit = () => {\n    this.setState({ imageUrl: this.state.input })\n\n    const raw = JSON.stringify({\n      \"user_app_id\": {\n        \"user_id\": \"clarifai\",\n        \"app_id\": \"main\"\n      },\n      \"inputs\": [\n        {\n          \"data\": {\n            \"image\": {\n              \"url\": this.state.input\n            }\n          }\n        }\n      ]\n    });\n\n    const requestOptions = {\n      method: 'POST',\n      headers: {\n        'Accept': 'application/json',\n        'Authorization': 'Key dc909b76df6646348782f475407e883b'\n      },\n      body: raw\n    };\n\n    // NOTE: MODEL_VERSION_ID is optional, you can also call prediction with the MODEL_ID only\n    // https://api.clarifai.com/v2/models/{YOUR_MODEL_ID}/outputs\n    // this will default to the latest version_id\n\n    fetch(`https://api.clarifai.com/v2/models/face-detection/versions/6dc7e46bc9124c5c8824be4822abe105/outputs`, requestOptions)\n      .then(response => response.text())\n      .then(result => {\n        this.displayFaceBox(this.calculateFaceLocation(result))\n        if (result) {\n          fetch('http://localhost:3000/image', {\n            method: 'PUT',\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify({\n              id: this.state.user.id\n            })\n          })\n            .then(result => result.json())\n            .then(count => {\n              this.setState(Object.assign(this.state.user, { entries: count }))\n            })\n        }\n      })\n      .catch(error => console.log('error', error));\n  }\n\n  render() {\n    const { isSignedIn, imageUrl, route, boxes, loadingInProgress } = this.state;\n\n    return (\n      <div className=\"container\">\n        {loadingInProgress ? (\n          <div className=\"loader-container\">\n            <ClipLoader color={'#fff'} size={150} />\n          </div>\n        ) : (\n          <div className=\"App\" >\n\n            <ParticlesBg\n              color=\"#FFFFFF\"\n              num={100}\n              type=\"cobweb\"\n              bg={true} />\n            <Navigation\n              isSignedIn={isSignedIn}\n              onRouteChange={this.onRouteChange} />\n            {route === 'home'\n              ? <>\n                <Logo />\n                <Rank\n                  name={this.state.user.name}\n                  entries={this.state.user.entries}\n                />\n                <ImageLinkForm\n                  onInputChange={this.onInputChange}\n                  onSubmit={this.onSubmit}\n                />\n                <FaceRecognition\n                  boxes={boxes}\n                  imageUrl={imageUrl}\n                />\n              </>\n              : (\n                route !== 'register'\n                  ? <SignIn\n                    loadUser={this.loadUser}\n                    onRouteChange={this.onRouteChange}\n                  />\n                  : <Register\n                    loadUser={this.loadUser}\n                    onRouteChange={this.onRouteChange}\n                  />\n              )\n\n            }\n          </div>\n        )}\n      </div>\n    )\n  }\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}