{"ast":null,"code":"/*!\n* Proton v4.2.1\n* https://github.com/drawcall/Proton\n*\n* Copyright 2013-2020, A-JIE\n* Licensed under the MIT license\n* http://www.opensource.org/licenses/mit-license\n*\n*/\n!function (t, e) {\n  \"object\" == typeof exports && \"undefined\" != typeof module ? module.exports = e() : \"function\" == typeof define && define.amd ? define(e) : t.Proton = e();\n}(this, function () {\n  \"use strict\";\n\n  var e = 3.1415926,\n      s = {\n    PI: e,\n    PIx2: 2 * e,\n    PI_2: e / 2,\n    PI_180: e / 180,\n    N180_PI: 180 / e,\n    Infinity: -999,\n    isInfinity: function isInfinity(t) {\n      return t === this.Infinity || t === 1 / 0;\n    },\n    randomAToB: function randomAToB(t, e, i) {\n      return 2 < arguments.length && void 0 !== i && i ? Math.floor(Math.random() * (e - t)) + t : t + Math.random() * (e - t);\n    },\n    randomFloating: function randomFloating(t, e, i) {\n      return this.randomAToB(t - e, t + e, i);\n    },\n    randomColor: function randomColor() {\n      return \"#\" + (\"00000\" + (16777216 * Math.random() << 0).toString(16)).slice(-6);\n    },\n    randomZone: function randomZone() {},\n    floor: function floor(t, e) {\n      e = 1 < arguments.length && void 0 !== e ? e : 4, e = Math.pow(10, e);\n      return Math.floor(t * e) / e;\n    },\n    degreeTransform: function degreeTransform(t) {\n      return t * e / 180;\n    },\n    toColor16: function toColor16(t) {\n      return \"#\" + t.toString(16);\n    }\n  },\n      i = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (t) {\n    return typeof t;\n  } : function (t) {\n    return t && \"function\" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? \"symbol\" : typeof t;\n  },\n      o = function o(t, e) {\n    if (!(t instanceof e)) throw new TypeError(\"Cannot call a class as a function\");\n  },\n      t = function t(_t2, e, i) {\n    return e && a(_t2.prototype, e), i && a(_t2, i), _t2;\n  };\n\n  function a(t, e) {\n    for (var i = 0; i < e.length; i++) {\n      var a = e[i];\n      a.enumerable = a.enumerable || !1, a.configurable = !0, \"value\" in a && (a.writable = !0), Object.defineProperty(t, a.key, a);\n    }\n  }\n\n  function n(t, e, i) {\n    null === t && (t = Function.prototype);\n    var a = Object.getOwnPropertyDescriptor(t, e);\n\n    if (void 0 !== a) {\n      if (\"value\" in a) return a.value;\n      a = a.get;\n      return void 0 !== a ? a.call(i) : void 0;\n    }\n\n    if (null !== (t = Object.getPrototypeOf(t))) return n(t, e, i);\n  }\n\n  var r = function r(t, e) {\n    if (\"function\" != typeof e && null !== e) throw new TypeError(\"Super expression must either be null or a function, not \" + typeof e);\n    t.prototype = Object.create(e && e.prototype, {\n      constructor: {\n        value: t,\n        enumerable: !1,\n        writable: !0,\n        configurable: !0\n      }\n    }), e && (Object.setPrototypeOf ? Object.setPrototypeOf(t, e) : t.__proto__ = e);\n  },\n      h = function h(t, e) {\n    if (!t) throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    return !e || \"object\" != typeof e && \"function\" != typeof e ? t : e;\n  },\n      l = (t(u, [{\n    key: \"getValue\",\n    value: function value(t) {\n      t = 0 < arguments.length && void 0 !== t && t;\n      return this.isArray ? P.getRandFromArray(this.a) : this.center ? s.randomFloating(this.a, this.b, t) : s.randomAToB(this.a, this.b, t);\n    }\n  }], [{\n    key: \"setSpanValue\",\n    value: function value(t, e, i) {\n      return t instanceof u ? t : void 0 === e ? new u(t) : void 0 === i ? new u(t, e) : new u(t, e, i);\n    }\n  }, {\n    key: \"getSpanValue\",\n    value: function value(t) {\n      return t instanceof u ? t.getValue() : t;\n    }\n  }]), u);\n\n  function u(t, e, i) {\n    o(this, u), P.isArray(t) ? (this.isArray = !0, this.a = t) : (this.isArray = !1, this.a = P.initValue(t, 1), this.b = P.initValue(e, this.a), this.center = P.initValue(i, !1));\n  }\n\n  var c = function c(t) {\n    --t;\n\n    for (var e = 1; e < 32; e <<= 1) {\n      t |= t >> e;\n    }\n\n    return t + 1;\n  },\n      d = function d(t, e) {\n    return [1, 0, 0, 0, 1, 0, t, e, 1];\n  },\n      y = function y(t) {\n    var e = Math.cos(t),\n        t = Math.sin(t);\n    return [e, -t, 0, t, e, 0, 0, 0, 1];\n  },\n      p = function p(t, e) {\n    return [t, 0, 0, 0, e, 0, 0, 0, 1];\n  },\n      f = function f(t, e) {\n    var i = t[0],\n        a = t[1],\n        r = t[2],\n        n = t[3],\n        s = t[4],\n        o = t[5],\n        h = t[6],\n        l = t[7],\n        u = t[8],\n        c = e[0],\n        d = e[1],\n        y = e[2],\n        p = e[3],\n        f = e[4],\n        v = e[5],\n        g = e[6],\n        t = e[7],\n        e = e[8];\n    return [i * c + a * p + r * g, i * d + a * f + r * t, i * y + a * v + r * e, n * c + s * p + o * g, n * d + s * f + o * t, n * y + s * v + o * e, h * c + l * p + u * g, h * d + l * f + u * t, h * y + l * v + u * e];\n  },\n      v = {\n    createCanvas: function createCanvas(t, e, i, a) {\n      var r = 3 < arguments.length && void 0 !== a ? a : \"absolute\",\n          a = document.createElement(\"canvas\");\n      return a.id = t, a.width = e, a.height = i, a.style.opacity = 0, a.style.position = r, this.transform(a, -500, -500, 0, 0), a;\n    },\n    createDiv: function createDiv(t, e, i) {\n      var a = document.createElement(\"div\");\n      return a.id = t, a.style.position = \"absolute\", this.resize(a, e, i), a;\n    },\n    resize: function resize(t, e, i) {\n      t.style.width = e + \"px\", t.style.height = i + \"px\", t.style.marginLeft = -e / 2 + \"px\", t.style.marginTop = -i / 2 + \"px\";\n    },\n    transform: function transform(t, e, i, a, r) {\n      t.style.willChange = \"transform\";\n      var n = \"translate(\" + e + \"px, \" + i + \"px) scale(\" + a + \") rotate(\" + r + \"deg)\";\n      this.css3(t, \"transform\", n);\n    },\n    transform3d: function transform3d(t, e, i, a, r) {\n      t.style.willChange = \"transform\";\n      r = \"translate3d(\" + e + \"px, \" + i + \"px, 0) scale(\" + a + \") rotate(\" + r + \"deg)\";\n      this.css3(t, \"backfaceVisibility\", \"hidden\"), this.css3(t, \"transform\", r);\n    },\n    css3: function css3(t, e, i) {\n      var a = e.charAt(0).toUpperCase() + e.substr(1);\n      t.style[\"Webkit\" + a] = i, t.style[\"Moz\" + a] = i, t.style[\"O\" + a] = i, t.style[\"ms\" + a] = i, t.style[\"\" + e] = i;\n    }\n  },\n      g = {},\n      m = {},\n      b = 0,\n      _ = function _(t, e, i) {\n    t.drawImage(e, i.x, i.y);\n    e = t.getImageData(i.x, i.y, i.width, i.height);\n    return t.clearRect(i.x, i.y, i.width, i.height), e;\n  },\n      x = function x(t, e, i) {\n    var a = \"string\" == typeof t ? t : t.src;\n    g[a] ? e(g[a], i) : ((t = new Image()).onload = function (t) {\n      g[a] = t.target, e(g[a], i);\n    }, t.src = a);\n  },\n      k = function k(t, e, i) {\n    var a,\n        r,\n        n = t.src;\n    return m[n] || (a = c(t.width), r = c(t.height), (r = v.createCanvas(\"proton_canvas_cache_\" + ++b, a, r)).getContext(\"2d\").drawImage(t, 0, 0, t.width, t.height), m[n] = r), e && e(m[n], i), m[n];\n  },\n      P = {\n    initValue: function initValue(t, e) {\n      return t = null != t ? t : e;\n    },\n    isArray: function isArray(t) {\n      return \"[object Array]\" === Object.prototype.toString.call(t);\n    },\n    emptyArray: function emptyArray(t) {\n      t && (t.length = 0);\n    },\n    toArray: function toArray(t) {\n      return this.isArray(t) ? t : [t];\n    },\n    getRandFromArray: function getRandFromArray(t) {\n      return t ? t[Math.floor(t.length * Math.random())] : null;\n    },\n    emptyObject: function emptyObject(t, e) {\n      var i,\n          a = 1 < arguments.length && void 0 !== e ? e : null;\n\n      for (i in t) {\n        a && -1 < a.indexOf(i) || delete t[i];\n      }\n    },\n    classApply: function classApply(t, e) {\n      e = 1 < arguments.length && void 0 !== e ? e : null;\n      return new (e ? t.bind.apply(t, [null].concat(e)) : t)();\n    },\n    setVectorVal: function setVectorVal(t, e) {\n      e = 1 < arguments.length && void 0 !== e ? e : null;\n      e && (this.hasProp(e, \"x\") && (t.p.x = e.x), this.hasProp(e, \"y\") && (t.p.y = e.y), this.hasProp(e, \"vx\") && (t.v.x = e.vx), this.hasProp(e, \"vy\") && (t.v.y = e.vy), this.hasProp(e, \"ax\") && (t.a.x = e.ax), this.hasProp(e, \"ay\") && (t.a.y = e.ay), this.hasProp(e, \"p\") && t.p.copy(e.p), this.hasProp(e, \"v\") && t.v.copy(e.v), this.hasProp(e, \"a\") && t.a.copy(e.a), this.hasProp(e, \"position\") && t.p.copy(e.position), this.hasProp(e, \"velocity\") && t.v.copy(e.velocity), this.hasProp(e, \"accelerate\") && t.a.copy(e.accelerate));\n    },\n    hasProp: function hasProp(t, e) {\n      return !!t && void 0 !== t[e];\n    },\n    setProp: function setProp(t, e) {\n      for (var i in e) {\n        t.hasOwnProperty(i) && (t[i] = l.getSpanValue(e[i]));\n      }\n\n      return t;\n    },\n    getImageData: function getImageData(t, e, i) {\n      return _(t, e, i);\n    },\n    destroyAll: function destroyAll(t, e) {\n      for (var i = 1 < arguments.length && void 0 !== e ? e : null, a = t.length; a--;) {\n        try {\n          t[a].destroy(i);\n        } catch (t) {}\n\n        delete t[a];\n      }\n\n      t.length = 0;\n    },\n    assign: function assign(t, e) {\n      if (\"function\" == typeof Object.assign) return Object.assign(t, e);\n\n      for (var i in e) {\n        Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);\n      }\n\n      return t;\n    }\n  },\n      E = {},\n      A = {\n    _index: 0,\n    _cache: {},\n    id: function id(t) {\n      return void 0 !== E[t] && null !== E[t] || (E[t] = 0), t + \"_\" + E[t]++;\n    },\n    getId: function getId(t) {\n      var e = this.getIdFromCache(t);\n      return e || (e = \"PUID_\" + this._index++, this._cache[e] = t, e);\n    },\n    getIdFromCache: function getIdFromCache(t) {\n      var e,\n          i = void 0;\n\n      for (i in this._cache) {\n        if ((e = this._cache[i]) === t) return i;\n        if (this.isBody(e, t) && e.src === t.src) return i;\n      }\n\n      return null;\n    },\n    isBody: function isBody(t, e) {\n      return \"object\" === (void 0 === t ? \"undefined\" : i(t)) && \"object\" === (void 0 === e ? \"undefined\" : i(e)) && t.isInner && e.isInner;\n    },\n    getTarget: function getTarget(t) {\n      return this._cache[t];\n    }\n  },\n      T = (t(R, [{\n    key: \"get\",\n    value: function value(t, e, i) {\n      var a = void 0;\n      return i = i || t.__puid || A.getId(t), (a = this.cache[i] && 0 < this.cache[i].length ? this.cache[i].pop() : this.createOrClone(t, e)).__puid = t.__puid || i, a;\n    }\n  }, {\n    key: \"expire\",\n    value: function value(t) {\n      return this.getCache(t.__puid).push(t);\n    }\n  }, {\n    key: \"createOrClone\",\n    value: function value(t, e) {\n      return this.total++, this.create ? this.create(t, e) : \"function\" == typeof t ? P.classApply(t, e) : t.clone();\n    }\n  }, {\n    key: \"getCount\",\n    value: function value() {\n      var t,\n          e = 0;\n\n      for (t in this.cache) {\n        e += this.cache[t].length;\n      }\n\n      return e++;\n    }\n  }, {\n    key: \"destroy\",\n    value: function value() {\n      for (var t in this.cache) {\n        this.cache[t].length = 0, delete this.cache[t];\n      }\n    }\n  }, {\n    key: \"getCache\",\n    value: function value(t) {\n      t = 0 < arguments.length && void 0 !== t ? t : \"default\";\n      return this.cache[t] || (this.cache[t] = []), this.cache[t];\n    }\n  }]), R);\n\n  function R(t) {\n    o(this, R), this.total = 0, this.cache = {};\n  }\n\n  var O = (t(w, [{\n    key: \"update\",\n    value: function value(t, e) {\n      this.add(t, e);\n      var i = this.getEmitter(),\n          t = this.getRenderer(),\n          e = \"\";\n\n      switch (this.type) {\n        case 2:\n          e += \"emitter:\" + this.proton.emitters.length + \"<br>\", i && (e += \"em speed:\" + i.emitSpeed + \"<br>\"), i && (e += \"pos:\" + this.getEmitterPos(i));\n          break;\n\n        case 3:\n          i && (e += \"initializes:\" + i.initializes.length + \"<br>\"), i && (e += '<span style=\"display:inline-block;\">' + this.concatArr(i.initializes) + \"</span><br>\"), i && (e += \"behaviours:\" + i.behaviours.length + \"<br>\"), i && (e += '<span style=\"display:inline-block;\">' + this.concatArr(i.behaviours) + \"</span><br>\");\n          break;\n\n        case 4:\n          t && (e += t.name + \"<br>\"), t && (e += \"body:\" + this.getCreatedNumber(t) + \"<br>\");\n          break;\n\n        default:\n          e += \"particles:\" + this.proton.getCount() + \"<br>\", e += \"pool:\" + this.proton.pool.getCount() + \"<br>\", e += \"total:\" + this.proton.pool.total;\n      }\n\n      this.container.innerHTML = e;\n    }\n  }, {\n    key: \"add\",\n    value: function value(t, e) {\n      var i = this;\n\n      if (!this.container) {\n        this.type = 1, this.container = document.createElement(\"div\"), this.container.style.cssText = [\"position:absolute;bottom:0px;left:0;cursor:pointer;\", \"opacity:0.9;z-index:10000;padding:10px;font-size:12px;font-family:Helvetica,Arial,sans-serif;\", \"width:120px;height:50px;background-color:#002;color:#0ff;\"].join(\"\"), this.container.addEventListener(\"click\", function (t) {\n          i.type++, 4 < i.type && (i.type = 1);\n        }, !1);\n        var a = void 0,\n            r = void 0;\n\n        switch (t) {\n          case 2:\n            a = \"#201\", r = \"#f08\";\n            break;\n\n          case 3:\n            a = \"#020\", r = \"#0f0\";\n            break;\n\n          default:\n            a = \"#002\", r = \"#0ff\";\n        }\n\n        this.container.style[\"background-color\"] = a, this.container.style.color = r;\n      }\n\n      this.container.parentNode || (e = e || this.body || document.body).appendChild(this.container);\n    }\n  }, {\n    key: \"getEmitter\",\n    value: function value() {\n      return this.proton.emitters[this.emitterIndex];\n    }\n  }, {\n    key: \"getRenderer\",\n    value: function value() {\n      return this.proton.renderers[this.rendererIndex];\n    }\n  }, {\n    key: \"concatArr\",\n    value: function value(t) {\n      var e = \"\";\n      if (!t || !t.length) return e;\n\n      for (var i = 0; i < t.length; i++) {\n        e += (t[i].name || \"\").substr(0, 1) + \".\";\n      }\n\n      return e;\n    }\n  }, {\n    key: \"getCreatedNumber\",\n    value: function value(t) {\n      return t.pool.total || t.cpool && t.cpool.total || 0;\n    }\n  }, {\n    key: \"getEmitterPos\",\n    value: function value(t) {\n      return Math.round(t.p.x) + \",\" + Math.round(t.p.y);\n    }\n  }]), w);\n\n  function w(t) {\n    o(this, w), this.proton = t, this.container = null, this.type = 1, this.emitterIndex = 0, this.rendererIndex = 0;\n  }\n\n  var C = (t(S, [{\n    key: \"addEventListener\",\n    value: function value(t, e) {\n      return this._listeners ? this.removeEventListener(t, e) : this._listeners = {}, this._listeners[t] || (this._listeners[t] = []), this._listeners[t].push(e), e;\n    }\n  }, {\n    key: \"removeEventListener\",\n    value: function value(t, e) {\n      if (this._listeners && this._listeners[t]) for (var i = this._listeners[t], a = i.length, r = 0; r < a; r++) {\n        if (i[r] === e) {\n          1 === a ? delete this._listeners[t] : i.splice(r, 1);\n          break;\n        }\n      }\n    }\n  }, {\n    key: \"removeAllEventListeners\",\n    value: function value(t) {\n      t ? this._listeners && delete this._listeners[t] : this._listeners = null;\n    }\n  }, {\n    key: \"dispatchEvent\",\n    value: function value(t, e) {\n      var i = !1,\n          a = this._listeners;\n\n      if (t && a) {\n        var r = a[t];\n        if (!r) return i;\n\n        for (var n = void 0, s = r.length; s--;) {\n          n = r[s], i = i || n(e);\n        }\n      }\n\n      return !!i;\n    }\n  }, {\n    key: \"hasEventListener\",\n    value: function value(t) {\n      var e = this._listeners;\n      return !(!e || !e[t]);\n    }\n  }], [{\n    key: \"bind\",\n    value: function value(t) {\n      t.prototype.dispatchEvent = S.prototype.dispatchEvent, t.prototype.hasEventListener = S.prototype.hasEventListener, t.prototype.addEventListener = S.prototype.addEventListener, t.prototype.removeEventListener = S.prototype.removeEventListener, t.prototype.removeAllEventListeners = S.prototype.removeAllEventListeners;\n    }\n  }]), S);\n\n  function S() {\n    o(this, S), this._listeners = null;\n  }\n\n  var I = (t(D, [{\n    key: \"calculate\",\n    value: function value(t, e, i) {\n      this.eulerIntegrate(t, e, i);\n    }\n  }, {\n    key: \"eulerIntegrate\",\n    value: function value(t, e, i) {\n      t.sleep || (t.old.p.copy(t.p), t.old.v.copy(t.v), t.a.multiplyScalar(1 / t.mass), t.v.add(t.a.multiplyScalar(e)), t.p.add(t.old.v.multiplyScalar(e)), i && t.v.multiplyScalar(i), t.a.clear());\n    }\n  }]), D);\n\n  function D(t) {\n    o(this, D), this.type = t;\n  }\n\n  var V = (t(M, [{\n    key: \"addRenderer\",\n    value: function value(t) {\n      t.init(this), this.renderers.push(t);\n    }\n  }, {\n    key: \"removeRenderer\",\n    value: function value(t) {\n      var e = this.renderers.indexOf(t);\n      this.renderers.splice(e, 1), t.remove(this);\n    }\n  }, {\n    key: \"addEmitter\",\n    value: function value(t) {\n      this.emitters.push(t), (t.parent = this).dispatchEvent(M.EMITTER_ADDED, t);\n    }\n  }, {\n    key: \"removeEmitter\",\n    value: function value(t) {\n      var e = this.emitters.indexOf(t);\n      this.emitters.splice(e, 1), t.parent = null, this.dispatchEvent(M.EMITTER_REMOVED, t);\n    }\n  }, {\n    key: \"update\",\n    value: function value() {\n      \"auto\" === this._fps ? (this.dispatchEvent(M.PROTON_UPDATE), M.USE_CLOCK ? (this.then || (this.then = new Date().getTime()), this.now = new Date().getTime(), this.elapsed = .001 * (this.now - this.then), this.amendChangeTabsBug(), 0 < this.elapsed && this.emittersUpdate(this.elapsed), this.then = this.now) : this.emittersUpdate(M.DEFAULT_INTERVAL), this.dispatchEvent(M.PROTON_UPDATE_AFTER)) : (this.then || (this.then = new Date().getTime()), this.now = new Date().getTime(), this.elapsed = .001 * (this.now - this.then), this.elapsed > this._interval && (this.dispatchEvent(M.PROTON_UPDATE), this.emittersUpdate(this._interval), this.then = this.now - this.elapsed % this._interval * 1e3, this.dispatchEvent(M.PROTON_UPDATE_AFTER)));\n    }\n  }, {\n    key: \"emittersUpdate\",\n    value: function value(t) {\n      for (var e = this.emitters.length; e--;) {\n        this.emitters[e].update(t);\n      }\n    }\n  }, {\n    key: \"amendChangeTabsBug\",\n    value: function value() {\n      M.amendChangeTabsBug && .5 < this.elapsed && (this.then = new Date().getTime(), this.elapsed = 0);\n    }\n  }, {\n    key: \"getCount\",\n    value: function value() {\n      for (var t = 0, e = this.emitters.length; e--;) {\n        t += this.emitters[e].particles.length;\n      }\n\n      return t;\n    }\n  }, {\n    key: \"getAllParticles\",\n    value: function value() {\n      for (var t = [], e = this.emitters.length; e--;) {\n        t = t.concat(this.emitters[e].particles);\n      }\n\n      return t;\n    }\n  }, {\n    key: \"destroyAllEmitters\",\n    value: function value() {\n      P.destroyAll(this.emitters);\n    }\n  }, {\n    key: \"destroy\",\n    value: function value(t) {\n      function e() {\n        i.time = 0, i.then = 0, i.pool.destroy(), P.destroyAll(i.emitters), P.destroyAll(i.renderers, i.getAllParticles());\n      }\n\n      var i = this;\n      0 < arguments.length && void 0 !== t && t ? setTimeout(e, 200) : e();\n    }\n  }, {\n    key: \"fps\",\n    set: function set(t) {\n      this._fps = t, this._interval = \"auto\" === t ? M.DEFAULT_INTERVAL : s.floor(1 / t, 7);\n    },\n    get: function get() {\n      return this._fps;\n    }\n  }]), M);\n\n  function M(t) {\n    o(this, M), this.emitters = [], this.renderers = [], this.time = 0, this.now = 0, this.then = 0, this.elapsed = 0, this.stats = new O(this), this.pool = new T(80), this.integrationType = P.initValue(t, M.EULER), this.integrator = new I(this.integrationType), this._fps = \"auto\", this._interval = M.DEFAULT_INTERVAL;\n  }\n\n  V.USE_CLOCK = !1, V.MEASURE = 100, V.EULER = \"euler\", V.RK2 = \"runge-kutta2\", V.PARTICLE_CREATED = \"PARTICLE_CREATED\", V.PARTICLE_UPDATE = \"PARTICLE_UPDATE\", V.PARTICLE_SLEEP = \"PARTICLE_SLEEP\", V.PARTICLE_DEAD = \"PARTICLE_DEAD\", V.EMITTER_ADDED = \"EMITTER_ADDED\", V.EMITTER_REMOVED = \"EMITTER_REMOVED\", V.PROTON_UPDATE = \"PROTON_UPDATE\", V.PROTON_UPDATE_AFTER = \"PROTON_UPDATE_AFTER\", V.DEFAULT_INTERVAL = .0167, V.amendChangeTabsBug = !0, C.bind(V);\n  var B = (t(L, [{\n    key: \"reset\",\n    value: function value() {\n      this.r = 255, this.g = 255, this.b = 255;\n    }\n  }]), L);\n\n  function L() {\n    var t = 0 < arguments.length && void 0 !== arguments[0] ? arguments[0] : 255,\n        e = 1 < arguments.length && void 0 !== arguments[1] ? arguments[1] : 255,\n        i = 2 < arguments.length && void 0 !== arguments[2] ? arguments[2] : 255;\n    o(this, L), this.r = t, this.g = e, this.b = i;\n  }\n\n  var U = {\n    easeLinear: function easeLinear(t) {\n      return t;\n    },\n    easeInQuad: function easeInQuad(t) {\n      return Math.pow(t, 2);\n    },\n    easeOutQuad: function easeOutQuad(t) {\n      return -(Math.pow(t - 1, 2) - 1);\n    },\n    easeInOutQuad: function easeInOutQuad(t) {\n      return (t /= .5) < 1 ? .5 * Math.pow(t, 2) : -.5 * ((t -= 2) * t - 2);\n    },\n    easeInCubic: function easeInCubic(t) {\n      return Math.pow(t, 3);\n    },\n    easeOutCubic: function easeOutCubic(t) {\n      return Math.pow(t - 1, 3) + 1;\n    },\n    easeInOutCubic: function easeInOutCubic(t) {\n      return (t /= .5) < 1 ? .5 * Math.pow(t, 3) : .5 * (Math.pow(t - 2, 3) + 2);\n    },\n    easeInQuart: function easeInQuart(t) {\n      return Math.pow(t, 4);\n    },\n    easeOutQuart: function easeOutQuart(t) {\n      return -(Math.pow(t - 1, 4) - 1);\n    },\n    easeInOutQuart: function easeInOutQuart(t) {\n      return (t /= .5) < 1 ? .5 * Math.pow(t, 4) : -.5 * ((t -= 2) * Math.pow(t, 3) - 2);\n    },\n    easeInSine: function easeInSine(t) {\n      return 1 - Math.cos(t * s.PI_2);\n    },\n    easeOutSine: function easeOutSine(t) {\n      return Math.sin(t * s.PI_2);\n    },\n    easeInOutSine: function easeInOutSine(t) {\n      return -.5 * (Math.cos(Math.PI * t) - 1);\n    },\n    easeInExpo: function easeInExpo(t) {\n      return 0 === t ? 0 : Math.pow(2, 10 * (t - 1));\n    },\n    easeOutExpo: function easeOutExpo(t) {\n      return 1 === t ? 1 : 1 - Math.pow(2, -10 * t);\n    },\n    easeInOutExpo: function easeInOutExpo(t) {\n      return 0 === t ? 0 : 1 === t ? 1 : (t /= .5) < 1 ? .5 * Math.pow(2, 10 * (t - 1)) : .5 * (2 - Math.pow(2, -10 * --t));\n    },\n    easeInCirc: function easeInCirc(t) {\n      return -(Math.sqrt(1 - t * t) - 1);\n    },\n    easeOutCirc: function easeOutCirc(t) {\n      return Math.sqrt(1 - Math.pow(t - 1, 2));\n    },\n    easeInOutCirc: function easeInOutCirc(t) {\n      return (t /= .5) < 1 ? -.5 * (Math.sqrt(1 - t * t) - 1) : .5 * (Math.sqrt(1 - (t -= 2) * t) + 1);\n    },\n    easeInBack: function easeInBack(t) {\n      return t * t * (2.70158 * t - 1.70158);\n    },\n    easeOutBack: function easeOutBack(t) {\n      return --t * t * (2.70158 * t + 1.70158) + 1;\n    },\n    easeInOutBack: function easeInOutBack(t) {\n      var e = 1.70158;\n      return (t /= .5) < 1 ? t * t * ((1 + (e *= 1.525)) * t - e) * .5 : .5 * ((t -= 2) * t * ((1 + (e *= 1.525)) * t + e) + 2);\n    },\n    getEasing: function getEasing(t) {\n      return \"function\" == typeof t ? t : this[t] || this.easeLinear;\n    }\n  },\n      F = (t(z, [{\n    key: \"set\",\n    value: function value(t, e) {\n      return this.x = t, this.y = e, this;\n    }\n  }, {\n    key: \"setX\",\n    value: function value(t) {\n      return this.x = t, this;\n    }\n  }, {\n    key: \"setY\",\n    value: function value(t) {\n      return this.y = t, this;\n    }\n  }, {\n    key: \"getGradient\",\n    value: function value() {\n      return 0 !== this.x ? Math.atan2(this.y, this.x) : 0 < this.y ? s.PI_2 : this.y < 0 ? -s.PI_2 : void 0;\n    }\n  }, {\n    key: \"copy\",\n    value: function value(t) {\n      return this.x = t.x, this.y = t.y, this;\n    }\n  }, {\n    key: \"add\",\n    value: function value(t, e) {\n      return void 0 !== e ? this.addVectors(t, e) : (this.x += t.x, this.y += t.y, this);\n    }\n  }, {\n    key: \"addXY\",\n    value: function value(t, e) {\n      return this.x += t, this.y += e, this;\n    }\n  }, {\n    key: \"addVectors\",\n    value: function value(t, e) {\n      return this.x = t.x + e.x, this.y = t.y + e.y, this;\n    }\n  }, {\n    key: \"sub\",\n    value: function value(t, e) {\n      return void 0 !== e ? this.subVectors(t, e) : (this.x -= t.x, this.y -= t.y, this);\n    }\n  }, {\n    key: \"subVectors\",\n    value: function value(t, e) {\n      return this.x = t.x - e.x, this.y = t.y - e.y, this;\n    }\n  }, {\n    key: \"divideScalar\",\n    value: function value(t) {\n      return 0 !== t ? (this.x /= t, this.y /= t) : this.set(0, 0), this;\n    }\n  }, {\n    key: \"multiplyScalar\",\n    value: function value(t) {\n      return this.x *= t, this.y *= t, this;\n    }\n  }, {\n    key: \"negate\",\n    value: function value() {\n      return this.multiplyScalar(-1);\n    }\n  }, {\n    key: \"dot\",\n    value: function value(t) {\n      return this.x * t.x + this.y * t.y;\n    }\n  }, {\n    key: \"lengthSq\",\n    value: function value() {\n      return this.x * this.x + this.y * this.y;\n    }\n  }, {\n    key: \"length\",\n    value: function value() {\n      return Math.sqrt(this.x * this.x + this.y * this.y);\n    }\n  }, {\n    key: \"normalize\",\n    value: function value() {\n      return this.divideScalar(this.length());\n    }\n  }, {\n    key: \"distanceTo\",\n    value: function value(t) {\n      return Math.sqrt(this.distanceToSquared(t));\n    }\n  }, {\n    key: \"rotate\",\n    value: function value(t) {\n      var e = this.x,\n          i = this.y;\n      return this.x = e * Math.cos(t) + i * Math.sin(t), this.y = -e * Math.sin(t) + i * Math.cos(t), this;\n    }\n  }, {\n    key: \"distanceToSquared\",\n    value: function value(t) {\n      var e = this.x - t.x,\n          t = this.y - t.y;\n      return e * e + t * t;\n    }\n  }, {\n    key: \"lerp\",\n    value: function value(t, e) {\n      return this.x += (t.x - this.x) * e, this.y += (t.y - this.y) * e, this;\n    }\n  }, {\n    key: \"equals\",\n    value: function value(t) {\n      return t.x === this.x && t.y === this.y;\n    }\n  }, {\n    key: \"clear\",\n    value: function value() {\n      return this.x = 0, this.y = 0, this;\n    }\n  }, {\n    key: \"clone\",\n    value: function value() {\n      return new z(this.x, this.y);\n    }\n  }]), z);\n\n  function z(t, e) {\n    o(this, z), this.x = t || 0, this.y = e || 0;\n  }\n\n  var j = (t(N, [{\n    key: \"getDirection\",\n    value: function value() {\n      return Math.atan2(this.v.x, -this.v.y) * s.N180_PI;\n    }\n  }, {\n    key: \"reset\",\n    value: function value() {\n      return this.life = 1 / 0, this.age = 0, this.dead = !1, this.sleep = !1, this.body = null, this.sprite = null, this.parent = null, this.energy = 1, this.mass = 1, this.radius = 10, this.alpha = 1, this.scale = 1, this.rotation = 0, this.color = null, this.p.set(0, 0), this.v.set(0, 0), this.a.set(0, 0), this.old.p.set(0, 0), this.old.v.set(0, 0), this.old.a.set(0, 0), this.easing = U.easeLinear, this.rgb.reset(), P.emptyObject(this.data), this.removeAllBehaviours(), this;\n    }\n  }, {\n    key: \"update\",\n    value: function value(t, e) {\n      this.sleep || (this.age += t, this.applyBehaviours(t, e)), this.age < this.life ? (e = this.easing(this.age / this.life), this.energy = Math.max(1 - e, 0)) : this.destroy();\n    }\n  }, {\n    key: \"applyBehaviours\",\n    value: function value(t, e) {\n      for (var i = this.behaviours.length, a = void 0, a = 0; a < i; a++) {\n        this.behaviours[a] && this.behaviours[a].applyBehaviour(this, t, e);\n      }\n    }\n  }, {\n    key: \"addBehaviour\",\n    value: function value(t) {\n      this.behaviours.push(t), t.hasOwnProperty(\"parents\") && t.parents.push(this), t.initialize(this);\n    }\n  }, {\n    key: \"addBehaviours\",\n    value: function value(t) {\n      for (var e = t.length, i = void 0, i = 0; i < e; i++) {\n        this.addBehaviour(t[i]);\n      }\n    }\n  }, {\n    key: \"removeBehaviour\",\n    value: function value(t) {\n      t = this.behaviours.indexOf(t);\n      -1 < t && (this.behaviours.splice(t, 1).parents = null);\n    }\n  }, {\n    key: \"removeAllBehaviours\",\n    value: function value() {\n      P.emptyArray(this.behaviours);\n    }\n  }, {\n    key: \"destroy\",\n    value: function value() {\n      this.removeAllBehaviours(), this.energy = 0, this.dead = !0, this.parent = null;\n    }\n  }]), N);\n\n  function N(t) {\n    o(this, N), this.id = \"\", this.old = {}, this.data = {}, this.behaviours = [], this.p = [], this.v = [], this.a = [], this.rgb = {}, this.name = \"Particle\", this.id = A.id(this.name), this.old = {}, this.data = {}, this.behaviours = [], this.p = new F(), this.v = new F(), this.a = new F(), this.old.p = new F(), this.old.v = new F(), this.old.a = new F(), this.rgb = new B(), this.reset(), t && P.setProp(this, t);\n  }\n\n  var H = {\n    hexToRgb: function hexToRgb(t) {\n      t = \"#\" === t.charAt(0) ? t.substring(1, 7) : t;\n      return {\n        r: parseInt(t.substring(0, 2), 16),\n        g: parseInt(t.substring(2, 4), 16),\n        b: parseInt(t.substring(4, 6), 16)\n      };\n    },\n    rgbToHex: function rgbToHex(t) {\n      return \"rgb(\" + t.r + \", \" + t.g + \", \" + t.b + \")\";\n    },\n    getHex16FromParticle: function getHex16FromParticle(t) {\n      return 65536 * Number(t.rgb.r) + 256 * Number(t.rgb.g) + Number(t.rgb.b);\n    }\n  },\n      q = (t(G, [{\n    key: \"set\",\n    value: function value(t, e) {\n      return this.r = t, this.tha = e, this;\n    }\n  }, {\n    key: \"setR\",\n    value: function value(t) {\n      return this.r = t, this;\n    }\n  }, {\n    key: \"setTha\",\n    value: function value(t) {\n      return this.tha = t, this;\n    }\n  }, {\n    key: \"copy\",\n    value: function value(t) {\n      return this.r = t.r, this.tha = t.tha, this;\n    }\n  }, {\n    key: \"toVector\",\n    value: function value() {\n      return new F(this.getX(), this.getY());\n    }\n  }, {\n    key: \"getX\",\n    value: function value() {\n      return this.r * Math.sin(this.tha);\n    }\n  }, {\n    key: \"getY\",\n    value: function value() {\n      return -this.r * Math.cos(this.tha);\n    }\n  }, {\n    key: \"normalize\",\n    value: function value() {\n      return this.r = 1, this;\n    }\n  }, {\n    key: \"equals\",\n    value: function value(t) {\n      return t.r === this.r && t.tha === this.tha;\n    }\n  }, {\n    key: \"clear\",\n    value: function value() {\n      return this.r = 0, this.tha = 0, this;\n    }\n  }, {\n    key: \"clone\",\n    value: function value() {\n      return new G(this.r, this.tha);\n    }\n  }]), G);\n\n  function G(t, e) {\n    o(this, G), this.r = Math.abs(t) || 0, this.tha = e || 0;\n  }\n\n  var X = {\n    create: function create(t) {\n      var e = new Float32Array(9);\n      return t && this.set(t, e), e;\n    },\n    set: function set(t, e) {\n      for (var i = 0; i < 9; i++) {\n        e[i] = t[i];\n      }\n\n      return e;\n    },\n    multiply: function multiply(t, e, i) {\n      var a = t[0],\n          r = t[1],\n          n = t[2],\n          s = t[3],\n          o = t[4],\n          h = t[6],\n          l = t[7],\n          u = e[0],\n          c = e[1],\n          d = e[2],\n          y = e[3],\n          p = e[4],\n          t = e[6],\n          e = e[7];\n      return i[0] = u * a + c * s, i[1] = u * r + c * o, i[2] = n * d, i[3] = y * a + p * s, i[4] = y * r + p * o, i[6] = t * a + e * s + h, i[7] = t * r + e * o + l, i;\n    },\n    inverse: function inverse(t, e) {\n      var i = t[0],\n          a = t[1],\n          r = t[3],\n          n = t[4],\n          s = t[6],\n          o = t[7],\n          h = -r,\n          t = o * r - n * s,\n          r = 1 / (i * n + a * h);\n      return e[0] = n * r, e[1] = -a * r, e[3] = h * r, e[4] = i * r, e[6] = t * r, e[7] = (-o * i + a * s) * r, e;\n    },\n    multiplyVec2: function multiplyVec2(t, e, i) {\n      var a = e[0],\n          e = e[1];\n      return i[0] = a * t[0] + e * t[3] + t[6], i[1] = a * t[1] + e * t[4] + t[7], i;\n    }\n  },\n      Y = (r(W, l), t(W, [{\n    key: \"getValue\",\n    value: function value() {\n      var t = P.getRandFromArray(this._arr);\n      return \"random\" === t || \"Random\" === t ? s.randomColor() : t;\n    }\n  }], [{\n    key: \"createArraySpan\",\n    value: function value(t) {\n      return t ? t instanceof W ? t : new W(t) : null;\n    }\n  }]), W);\n\n  function W(t) {\n    o(this, W);\n    var e = h(this, (W.__proto__ || Object.getPrototypeOf(W)).call(this));\n    return e._arr = P.toArray(t), e;\n  }\n\n  var Z = (t(Q, [{\n    key: \"contains\",\n    value: function value(t, e) {\n      return t <= this.right && t >= this.x && e <= this.bottom && e >= this.y;\n    }\n  }]), Q);\n\n  function Q(t, e, i, a) {\n    o(this, Q), this.x = t, this.y = e, this.width = i, this.height = a, this.bottom = this.y + this.height, this.right = this.x + this.width;\n  }\n\n  var K = (t(J, [{\n    key: \"init\",\n    value: function value() {\n      this.startTime = 0, this.nextTime = this.timePan.getValue();\n    }\n  }, {\n    key: \"getValue\",\n    value: function value(t) {\n      return this.startTime += t, this.startTime >= this.nextTime ? (this.startTime = 0, this.nextTime = this.timePan.getValue(), 1 === this.numPan.b ? .5 < this.numPan.getValue(!1) ? 1 : 0 : this.numPan.getValue(!0)) : 0;\n    }\n  }]), J);\n\n  function J(t, e) {\n    o(this, J), this.numPan = l.setSpanValue(P.initValue(t, 1)), this.timePan = l.setSpanValue(P.initValue(e, 1)), this.startTime = 0, this.nextTime = 0, this.init();\n  }\n\n  var $ = (t(tt, [{\n    key: \"reset\",\n    value: function value() {}\n  }, {\n    key: \"init\",\n    value: function value(t, e) {\n      e ? this.initialize(e) : this.initialize(t);\n    }\n  }, {\n    key: \"initialize\",\n    value: function value() {}\n  }]), tt);\n\n  function tt() {\n    o(this, tt);\n  }\n\n  var et = (r(it, $), t(it, [{\n    key: \"initialize\",\n    value: function value(t) {\n      this.lifePan.a === 1 / 0 ? t.life = 1 / 0 : t.life = this.lifePan.getValue();\n    }\n  }]), it);\n\n  function it(t, e, i) {\n    o(this, it);\n    var a = h(this, (it.__proto__ || Object.getPrototypeOf(it)).call(this));\n    return a.lifePan = l.setSpanValue(t, e, i), a.name = \"Life\", a;\n  }\n\n  var at = (t(rt, [{\n    key: \"getPosition\",\n    value: function value() {}\n  }, {\n    key: \"crossing\",\n    value: function value() {}\n  }]), rt);\n\n  function rt() {\n    o(this, rt), this.vector = new F(0, 0), this.random = 0, this.crossType = \"dead\", this.alert = !0;\n  }\n\n  var nt = (r(st, at), t(st, [{\n    key: \"getPosition\",\n    value: function value() {\n      return this.vector.x = this.x, this.vector.y = this.y, this.vector;\n    }\n  }, {\n    key: \"crossing\",\n    value: function value() {\n      this.alert && (console.error(\"Sorry, PointZone does not support crossing method!\"), this.alert = !1);\n    }\n  }]), st);\n\n  function st(t, e) {\n    o(this, st);\n    var i = h(this, (st.__proto__ || Object.getPrototypeOf(st)).call(this));\n    return i.x = t, i.y = e, i;\n  }\n\n  var ot = (r(ht, $), t(ht, [{\n    key: \"reset\",\n    value: function value(t) {\n      this.zone = P.initValue(t, new nt());\n    }\n  }, {\n    key: \"initialize\",\n    value: function value(t) {\n      this.zone.getPosition(), t.p.x = this.zone.vector.x, t.p.y = this.zone.vector.y;\n    }\n  }]), ht);\n\n  function ht(t) {\n    o(this, ht);\n    var e = h(this, (ht.__proto__ || Object.getPrototypeOf(ht)).call(this));\n    return e.zone = P.initValue(t, new nt()), e.name = \"Position\", e;\n  }\n\n  var lt = (r(ut, $), t(ut, [{\n    key: \"reset\",\n    value: function value(t, e, i) {\n      this.rPan = l.setSpanValue(t), this.thaPan = l.setSpanValue(e), this.type = P.initValue(i, \"vector\");\n    }\n  }, {\n    key: \"normalizeVelocity\",\n    value: function value(t) {\n      return t * V.MEASURE;\n    }\n  }, {\n    key: \"initialize\",\n    value: function value(t) {\n      var e;\n      \"p\" === this.type || \"P\" === this.type || \"polar\" === this.type ? (e = new q(this.normalizeVelocity(this.rPan.getValue()), this.thaPan.getValue() * s.PI_180), t.v.x = e.getX(), t.v.y = e.getY()) : (t.v.x = this.normalizeVelocity(this.rPan.getValue()), t.v.y = this.normalizeVelocity(this.thaPan.getValue()));\n    }\n  }]), ut);\n\n  function ut(t, e, i) {\n    o(this, ut);\n    var a = h(this, (ut.__proto__ || Object.getPrototypeOf(ut)).call(this));\n    return a.rPan = l.setSpanValue(t), a.thaPan = l.setSpanValue(e), a.type = P.initValue(i, \"vector\"), a.name = \"Velocity\", a;\n  }\n\n  var ct = (r(dt, $), t(dt, [{\n    key: \"initialize\",\n    value: function value(t) {\n      t.mass = this.massPan.getValue();\n    }\n  }]), dt);\n\n  function dt(t, e, i) {\n    o(this, dt);\n    var a = h(this, (dt.__proto__ || Object.getPrototypeOf(dt)).call(this));\n    return a.massPan = l.setSpanValue(t, e, i), a.name = \"Mass\", a;\n  }\n\n  var yt = (r(pt, $), t(pt, [{\n    key: \"reset\",\n    value: function value(t, e, i) {\n      this.radius = l.setSpanValue(t, e, i);\n    }\n  }, {\n    key: \"initialize\",\n    value: function value(t) {\n      t.radius = this.radius.getValue(), t.data.oldRadius = t.radius;\n    }\n  }]), pt);\n\n  function pt(t, e, i) {\n    o(this, pt);\n    var a = h(this, (pt.__proto__ || Object.getPrototypeOf(pt)).call(this));\n    return a.radius = l.setSpanValue(t, e, i), a.name = \"Radius\", a;\n  }\n\n  var ft = (r(vt, $), t(vt, [{\n    key: \"initialize\",\n    value: function value(t) {\n      var e = this.image.getValue();\n      t.body = \"string\" == typeof e ? {\n        width: this.w,\n        height: this.h,\n        src: e,\n        isInner: !0,\n        inner: !0\n      } : e;\n    }\n  }, {\n    key: \"setSpanValue\",\n    value: function value(t) {\n      return t instanceof Y ? t : new Y(t);\n    }\n  }]), vt);\n\n  function vt(t, e, i) {\n    o(this, vt);\n    var a = h(this, (vt.__proto__ || Object.getPrototypeOf(vt)).call(this));\n    return a.image = a.setSpanValue(t), a.w = P.initValue(e, 20), a.h = P.initValue(i, a.w), a.name = \"Body\", a;\n  }\n\n  var gt = (t(mt, [{\n    key: \"reset\",\n    value: function value(t, e) {\n      this.life = P.initValue(t, 1 / 0), this.easing = U.getEasing(e);\n    }\n  }, {\n    key: \"normalizeForce\",\n    value: function value(t) {\n      return t.multiplyScalar(V.MEASURE);\n    }\n  }, {\n    key: \"normalizeValue\",\n    value: function value(t) {\n      return t * V.MEASURE;\n    }\n  }, {\n    key: \"initialize\",\n    value: function value() {}\n  }, {\n    key: \"calculate\",\n    value: function value(t, e) {\n      this.age += e, this.age >= this.life || this.dead ? (this.energy = 0, this.dead = !0, this.destroy()) : (t = this.easing(t.age / t.life), this.energy = Math.max(1 - t, 0));\n    }\n  }, {\n    key: \"destroy\",\n    value: function value() {\n      for (var t = this.parents.length; t--;) {\n        this.parents[t].removeBehaviour(this);\n      }\n\n      this.parents.length = 0;\n    }\n  }]), mt);\n\n  function mt(t, e) {\n    o(this, mt), this.life = P.initValue(t, 1 / 0), this.easing = U.getEasing(e), this.age = 0, this.energy = 1, this.dead = !1, this.parents = [], this.id = \"Behaviour_\" + mt.id++, this.name = \"Behaviour\";\n  }\n\n  gt.id = 0;\n  var bt = (r(_t, gt), t(_t, [{\n    key: \"reset\",\n    value: function value(t, e, i, a) {\n      this.force = this.normalizeForce(new F(t, e)), i && n(_t.prototype.__proto__ || Object.getPrototypeOf(_t.prototype), \"reset\", this).call(this, i, a);\n    }\n  }, {\n    key: \"applyBehaviour\",\n    value: function value(t, e, i) {\n      this.calculate(t, e, i), t.a.add(this.force);\n    }\n  }]), _t);\n\n  function _t(t, e, i, a) {\n    o(this, _t);\n    a = h(this, (_t.__proto__ || Object.getPrototypeOf(_t)).call(this, i, a));\n    return a.force = a.normalizeForce(new F(t, e)), a.name = \"Force\", a;\n  }\n\n  var xt = (r(kt, gt), t(kt, [{\n    key: \"reset\",\n    value: function value(t, e, i, a, r) {\n      this.targetPosition = P.initValue(t, new F()), this.radius = P.initValue(i, 1e3), this.force = P.initValue(this.normalizeValue(e), 100), this.radiusSq = this.radius * this.radius, this.attractionForce = new F(), this.lengthSq = 0, a && n(kt.prototype.__proto__ || Object.getPrototypeOf(kt.prototype), \"reset\", this).call(this, a, r);\n    }\n  }, {\n    key: \"applyBehaviour\",\n    value: function value(t, e, i) {\n      this.calculate(t, e, i), this.attractionForce.copy(this.targetPosition), this.attractionForce.sub(t.p), this.lengthSq = this.attractionForce.lengthSq(), 4e-5 < this.lengthSq && this.lengthSq < this.radiusSq && (this.attractionForce.normalize(), this.attractionForce.multiplyScalar(1 - this.lengthSq / this.radiusSq), this.attractionForce.multiplyScalar(this.force), t.a.add(this.attractionForce));\n    }\n  }]), kt);\n\n  function kt(t, e, i, a, r) {\n    o(this, kt);\n    r = h(this, (kt.__proto__ || Object.getPrototypeOf(kt)).call(this, a, r));\n    return r.targetPosition = P.initValue(t, new F()), r.radius = P.initValue(i, 1e3), r.force = P.initValue(r.normalizeValue(e), 100), r.radiusSq = r.radius * r.radius, r.attractionForce = new F(), r.lengthSq = 0, r.name = \"Attraction\", r;\n  }\n\n  var Pt = (r(Et, gt), t(Et, [{\n    key: \"reset\",\n    value: function value(t, e, i, a, r) {\n      this.panFoce = new F(t, e), this.panFoce = this.normalizeForce(this.panFoce), this.delay = i, a && n(Et.prototype.__proto__ || Object.getPrototypeOf(Et.prototype), \"reset\", this).call(this, a, r);\n    }\n  }, {\n    key: \"initialize\",\n    value: function value(t) {\n      t.data.time = 0;\n    }\n  }, {\n    key: \"applyBehaviour\",\n    value: function value(t, e, i) {\n      this.calculate(t, e, i), t.data.time += e, t.data.time >= this.delay && (t.a.addXY(s.randomAToB(-this.panFoce.x, this.panFoce.x), s.randomAToB(-this.panFoce.y, this.panFoce.y)), t.data.time = 0);\n    }\n  }]), Et);\n\n  function Et(t, e, i, a, r) {\n    o(this, Et);\n    r = h(this, (Et.__proto__ || Object.getPrototypeOf(Et)).call(this, a, r));\n    return r.reset(t, e, i), r.time = 0, r.name = \"RandomDrift\", r;\n  }\n\n  var At = (r(Tt, bt), t(Tt, [{\n    key: \"reset\",\n    value: function value(t, e, i) {\n      n(Tt.prototype.__proto__ || Object.getPrototypeOf(Tt.prototype), \"reset\", this).call(this, 0, t, e, i);\n    }\n  }]), Tt);\n\n  function Tt(t, e, i) {\n    o(this, Tt);\n    i = h(this, (Tt.__proto__ || Object.getPrototypeOf(Tt)).call(this, 0, t, e, i));\n    return i.name = \"Gravity\", i;\n  }\n\n  var Rt = (r(Ot, gt), t(Ot, [{\n    key: \"reset\",\n    value: function value(t, e, i, a, r) {\n      this.emitter = P.initValue(t, null), this.mass = P.initValue(e, !0), this.callback = P.initValue(i, null), this.collisionPool = [], this.delta = new F(), a && n(Ot.prototype.__proto__ || Object.getPrototypeOf(Ot.prototype), \"reset\", this).call(this, a, r);\n    }\n  }, {\n    key: \"applyBehaviour\",\n    value: function value(t, e, i) {\n      for (var a, r, n, s, o, h, l = (this.emitter ? this.emitter.particles : this.pool).slice(i), u = l.length, c = void 0, d = void 0, d = 0; d < u; d++) {\n        (c = l[d]) !== t && (this.delta.copy(c.p), this.delta.sub(t.p), (a = this.delta.lengthSq()) <= (h = t.radius + c.radius) * h && (r = h - Math.sqrt(a), r += .5, n = t.mass + c.mass, s = this.mass ? c.mass / n : .5, o = this.mass ? t.mass / n : .5, t.p.add(this.delta.clone().normalize().multiplyScalar(r * -s)), c.p.add(this.delta.normalize().multiplyScalar(r * o)), this.callback && this.callback(t, c)));\n      }\n    }\n  }]), Ot);\n\n  function Ot(t, e, i, a, r) {\n    o(this, Ot);\n    r = h(this, (Ot.__proto__ || Object.getPrototypeOf(Ot)).call(this, a, r));\n    return r.reset(t, e, i), r.name = \"Collision\", r;\n  }\n\n  var wt = (r(Ct, gt), t(Ct, [{\n    key: \"reset\",\n    value: function value(t, e, i, a) {\n      this.zone = t, this.zone.crossType = P.initValue(e, \"dead\"), i && n(Ct.prototype.__proto__ || Object.getPrototypeOf(Ct.prototype), \"reset\", this).call(this, i, a);\n    }\n  }, {\n    key: \"applyBehaviour\",\n    value: function value(t, e, i) {\n      this.calculate(t, e, i), this.zone.crossing(t);\n    }\n  }]), Ct);\n\n  function Ct(t, e, i, a) {\n    o(this, Ct);\n    a = h(this, (Ct.__proto__ || Object.getPrototypeOf(Ct)).call(this, i, a));\n    return a.reset(t, e), a.name = \"CrossZone\", a;\n  }\n\n  var St = (r(It, gt), t(It, [{\n    key: \"reset\",\n    value: function value(t, e, i, a) {\n      this.same = null == e, this.a = l.setSpanValue(P.initValue(t, 1)), this.b = l.setSpanValue(e), i && n(It.prototype.__proto__ || Object.getPrototypeOf(It.prototype), \"reset\", this).call(this, i, a);\n    }\n  }, {\n    key: \"initialize\",\n    value: function value(t) {\n      t.data.alphaA = this.a.getValue(), this.same ? t.data.alphaB = t.data.alphaA : t.data.alphaB = this.b.getValue();\n    }\n  }, {\n    key: \"applyBehaviour\",\n    value: function value(t, e, i) {\n      this.calculate(t, e, i), t.alpha = t.data.alphaB + (t.data.alphaA - t.data.alphaB) * this.energy, t.alpha < .001 && (t.alpha = 0);\n    }\n  }]), It);\n\n  function It(t, e, i, a) {\n    o(this, It);\n    a = h(this, (It.__proto__ || Object.getPrototypeOf(It)).call(this, i, a));\n    return a.reset(t, e), a.name = \"Alpha\", a;\n  }\n\n  var Dt = (r(Vt, gt), t(Vt, [{\n    key: \"reset\",\n    value: function value(t, e, i, a) {\n      this.same = null == e, this.a = l.setSpanValue(P.initValue(t, 1)), this.b = l.setSpanValue(e), i && n(Vt.prototype.__proto__ || Object.getPrototypeOf(Vt.prototype), \"reset\", this).call(this, i, a);\n    }\n  }, {\n    key: \"initialize\",\n    value: function value(t) {\n      t.data.scaleA = this.a.getValue(), t.data.oldRadius = t.radius, t.data.scaleB = this.same ? t.data.scaleA : this.b.getValue();\n    }\n  }, {\n    key: \"applyBehaviour\",\n    value: function value(t, e, i) {\n      this.calculate(t, e, i), t.scale = t.data.scaleB + (t.data.scaleA - t.data.scaleB) * this.energy, t.scale < 1e-4 && (t.scale = 0), t.radius = t.data.oldRadius * t.scale;\n    }\n  }]), Vt);\n\n  function Vt(t, e, i, a) {\n    o(this, Vt);\n    a = h(this, (Vt.__proto__ || Object.getPrototypeOf(Vt)).call(this, i, a));\n    return a.reset(t, e), a.name = \"Scale\", a;\n  }\n\n  var Mt = (r(Bt, gt), t(Bt, [{\n    key: \"reset\",\n    value: function value(t, e, i, a, r) {\n      this.same = null == e, this.a = l.setSpanValue(P.initValue(t, \"Velocity\")), this.b = l.setSpanValue(P.initValue(e, 0)), this.style = P.initValue(i, \"to\"), a && n(Bt.prototype.__proto__ || Object.getPrototypeOf(Bt.prototype), \"reset\", this).call(this, a, r);\n    }\n  }, {\n    key: \"initialize\",\n    value: function value(t) {\n      t.rotation = this.a.getValue(), t.data.rotationA = this.a.getValue(), this.same || (t.data.rotationB = this.b.getValue());\n    }\n  }, {\n    key: \"applyBehaviour\",\n    value: function value(t, e, i) {\n      this.calculate(t, e, i), this.same ? \"V\" !== this.a.a && \"Velocity\" !== this.a.a && \"v\" !== this.a.a || (t.rotation = t.getDirection()) : \"to\" === this.style || \"TO\" === this.style || \"_\" === this.style ? t.rotation += t.data.rotationB + (t.data.rotationA - t.data.rotationB) * this.energy : t.rotation += t.data.rotationB;\n    }\n  }]), Bt);\n\n  function Bt(t, e, i, a, r) {\n    o(this, Bt);\n    r = h(this, (Bt.__proto__ || Object.getPrototypeOf(Bt)).call(this, a, r));\n    return r.reset(t, e, i), r.name = \"Rotate\", r;\n  }\n\n  var Lt = (r(Ut, gt), t(Ut, [{\n    key: \"reset\",\n    value: function value(t, e, i, a) {\n      this.a = Y.createArraySpan(t), this.b = Y.createArraySpan(e), i && n(Ut.prototype.__proto__ || Object.getPrototypeOf(Ut.prototype), \"reset\", this).call(this, i, a);\n    }\n  }, {\n    key: \"initialize\",\n    value: function value(t) {\n      t.color = this.a.getValue(), t.data.colorA = H.hexToRgb(t.color), this.b && (t.data.colorB = H.hexToRgb(this.b.getValue()));\n    }\n  }, {\n    key: \"applyBehaviour\",\n    value: function value(t, e, i) {\n      this.b ? (this.calculate(t, e, i), t.rgb.r = t.data.colorB.r + (t.data.colorA.r - t.data.colorB.r) * this.energy, t.rgb.g = t.data.colorB.g + (t.data.colorA.g - t.data.colorB.g) * this.energy, t.rgb.b = t.data.colorB.b + (t.data.colorA.b - t.data.colorB.b) * this.energy, t.rgb.r = Math.floor(t.rgb.r), t.rgb.g = Math.floor(t.rgb.g), t.rgb.b = Math.floor(t.rgb.b)) : (t.rgb.r = t.data.colorA.r, t.rgb.g = t.data.colorA.g, t.rgb.b = t.data.colorA.b);\n    }\n  }]), Ut);\n\n  function Ut(t, e, i, a) {\n    o(this, Ut);\n    a = h(this, (Ut.__proto__ || Object.getPrototypeOf(Ut)).call(this, i, a));\n    return a.reset(t, e), a.name = \"Color\", a;\n  }\n\n  var Ft = \"changing\",\n      zt = (r(jt, gt), t(jt, [{\n    key: \"setAngleAndForce\",\n    value: function value(t, e) {\n      this.force = Ft, this.angle = s.PI / 2, \"right\" === t ? this.angle = s.PI / 2 : \"left\" === t ? this.angle = -s.PI / 2 : \"random\" === t ? this.angle = \"random\" : t instanceof l ? (this.angle = \"span\", this.span = t) : t && (this.angle = t), \"changing\" === String(e).toLowerCase() || \"chang\" === String(e).toLowerCase() || \"auto\" === String(e).toLowerCase() ? this.force = Ft : e && (this.force = e);\n    }\n  }, {\n    key: \"reset\",\n    value: function value(t, e, i, a) {\n      this.angle = s.PI / 2, this.setAngleAndForce(t, e), i && n(jt.prototype.__proto__ || Object.getPrototypeOf(jt.prototype), \"reset\", this).call(this, i, a);\n    }\n  }, {\n    key: \"initialize\",\n    value: function value(t) {\n      \"random\" === this.angle ? t.data.cangle = s.randomAToB(-s.PI, s.PI) : \"span\" === this.angle && (t.data.cangle = this.span.getValue()), t.data.cyclone = new F(0, 0);\n    }\n  }, {\n    key: \"applyBehaviour\",\n    value: function value(t, e, i) {\n      this.calculate(t, e, i);\n      e = void 0, i = t.v.getGradient();\n      \"random\" === this.angle || \"span\" === this.angle ? i += t.data.cangle : i += this.angle, e = this.force === Ft ? t.v.length() / 100 : this.force, t.data.cyclone.x = e * Math.cos(i), t.data.cyclone.y = e * Math.sin(i), t.data.cyclone = this.normalizeForce(t.data.cyclone), t.a.add(t.data.cyclone);\n    }\n  }]), jt);\n\n  function jt(t, e, i, a) {\n    o(this, jt);\n    a = h(this, (jt.__proto__ || Object.getPrototypeOf(jt)).call(this, i, a));\n    return a.setAngleAndForce(t, e), a.name = \"Cyclone\", a;\n  }\n\n  var Nt = (r(Ht, xt), t(Ht, [{\n    key: \"reset\",\n    value: function value(t, e, i, a, r) {\n      n(Ht.prototype.__proto__ || Object.getPrototypeOf(Ht.prototype), \"reset\", this).call(this, t, e, i, a, r), this.force *= -1;\n    }\n  }]), Ht);\n\n  function Ht(t, e, i, a, r) {\n    o(this, Ht);\n    r = h(this, (Ht.__proto__ || Object.getPrototypeOf(Ht)).call(this, t, e, i, a, r));\n    return r.force *= -1, r.name = \"Repulsion\", r;\n  }\n\n  var qt = (r(Gt, gt), t(Gt, [{\n    key: \"reset\",\n    value: function value(t, e, i, a) {\n      this.distanceVec = new F(), this.centerPoint = P.initValue(t, new F()), this.force = P.initValue(this.normalizeValue(e), 100), i && n(Gt.prototype.__proto__ || Object.getPrototypeOf(Gt.prototype), \"reset\", this).call(this, i, a);\n    }\n  }, {\n    key: \"initialize\",\n    value: function value() {}\n  }, {\n    key: \"applyBehaviour\",\n    value: function value(t, e) {\n      this.distanceVec.set(this.centerPoint.x - t.p.x, this.centerPoint.y - t.p.y);\n      var i,\n          a = this.distanceVec.lengthSq();\n      0 !== a && (i = this.distanceVec.length(), i = this.force * e / (a * i), t.v.x += i * this.distanceVec.x, t.v.y += i * this.distanceVec.y);\n    }\n  }]), Gt);\n\n  function Gt(t, e, i, a) {\n    o(this, Gt);\n    a = h(this, (Gt.__proto__ || Object.getPrototypeOf(Gt)).call(this, i, a));\n    return a.distanceVec = new F(), a.centerPoint = P.initValue(t, new F()), a.force = P.initValue(a.normalizeValue(e), 100), a.name = \"GravityWell\", a;\n  }\n\n  var Xt = {\n    initialize: function initialize(t, e, i) {\n      for (var a = i.length, r = void 0, r = 0; r < a; r++) {\n        i[r] instanceof $ ? i[r].init(t, e) : this.init(t, e, i[r]);\n      }\n\n      this.bindEmitter(t, e);\n    },\n    init: function init(t, e, i) {\n      P.setProp(e, i), P.setVectorVal(e, i);\n    },\n    bindEmitter: function bindEmitter(t, e) {\n      t.bindEmitter && (e.p.add(t.p), e.v.add(t.v), e.a.add(t.a), e.v.rotate(s.degreeTransform(t.rotation)));\n    }\n  },\n      Yt = (r(Wt, j), t(Wt, [{\n    key: \"emit\",\n    value: function value(t, e) {\n      this.stoped = !1, this.emitTime = 0, this.totalTime = P.initValue(t, 1 / 0), !0 === e || \"life\" === e || \"destroy\" === e ? this.life = \"once\" === t ? 1 : this.totalTime : isNaN(e) || (this.life = e), this.rate.init();\n    }\n  }, {\n    key: \"stop\",\n    value: function value() {\n      this.totalTime = -1, this.emitTime = 0, this.stoped = !0;\n    }\n  }, {\n    key: \"preEmit\",\n    value: function value(t) {\n      var e = this.stoped,\n          i = this.emitTime,\n          a = this.totalTime;\n      this.stoped = !1, this.emitTime = 0, this.totalTime = t, this.rate.init();\n\n      for (; .0167 < t;) {\n        t -= .0167, this.update(.0167);\n      }\n\n      this.stoped = e, this.emitTime = i + Math.max(t, 0), this.totalTime = a;\n    }\n  }, {\n    key: \"removeAllParticles\",\n    value: function value() {\n      for (var t = this.particles.length; t--;) {\n        this.particles[t].dead = !0;\n      }\n    }\n  }, {\n    key: \"addSelfInitialize\",\n    value: function value(t) {\n      t.init ? t.init(this) : this.initAll();\n    }\n  }, {\n    key: \"addInitialize\",\n    value: function value() {\n      for (var t = arguments.length, e = Array(t), i = 0; i < t; i++) {\n        e[i] = arguments[i];\n      }\n\n      for (var a = e.length; a--;) {\n        this.initializes.push(e[a]);\n      }\n    }\n  }, {\n    key: \"removeInitialize\",\n    value: function value(t) {\n      t = this.initializes.indexOf(t);\n      -1 < t && this.initializes.splice(t, 1);\n    }\n  }, {\n    key: \"removeAllInitializers\",\n    value: function value() {\n      P.emptyArray(this.initializes);\n    }\n  }, {\n    key: \"addBehaviour\",\n    value: function value() {\n      for (var t = arguments.length, e = Array(t), i = 0; i < t; i++) {\n        e[i] = arguments[i];\n      }\n\n      for (var a = arguments.length; a--;) {\n        var r = e[a];\n        this.behaviours.push(r), r.parents && r.parents.push(this);\n      }\n    }\n  }, {\n    key: \"removeBehaviour\",\n    value: function value(t) {\n      var e = this.behaviours.indexOf(t);\n      return this.behaviours.splice(e, 1), t.parents && (e = t.parents.indexOf(t), t.parents.splice(e, 1)), e;\n    }\n  }, {\n    key: \"removeAllBehaviours\",\n    value: function value() {\n      P.emptyArray(this.behaviours);\n    }\n  }, {\n    key: \"update\",\n    value: function value(t) {\n      this.age += t, (this.age >= this.life || this.dead) && this.destroy(), this.emitting(t), this.integrate(t);\n    }\n  }, {\n    key: \"integrate\",\n    value: function value(t) {\n      if (this.parent) {\n        var e = 1 - this.damping;\n        this.parent.integrator.calculate(this, t, e);\n\n        for (var i = void 0, a = void 0, i = this.particles.length - 1; 0 <= i; i--) {\n          (a = this.particles[i]).update(t, i), this.parent.integrator.calculate(a, t, e), this.dispatch(\"PARTICLE_UPDATE\", a), a.dead && (this.dispatch(\"PARTICLE_DEAD\", a), this.parent.pool.expire(a), this.particles.splice(i, 1));\n        }\n      }\n    }\n  }, {\n    key: \"dispatch\",\n    value: function value(t, e) {\n      this.parent && this.parent.dispatchEvent(t, e), this.bindEvent && this.dispatchEvent(t, e);\n    }\n  }, {\n    key: \"emitting\",\n    value: function value(t) {\n      if (\"once\" === this.totalTime) {\n        var e = void 0,\n            i = this.rate.getValue(99999);\n\n        for (0 < i && (this.emitSpeed = i), e = 0; e < i; e++) {\n          this.createParticle();\n        }\n\n        this.totalTime = \"none\";\n      } else if (this.emitTime += t, this.emitTime < this.totalTime) {\n        var a = this.rate.getValue(t),\n            r = void 0;\n\n        for (0 < a && (this.emitSpeed = a), r = 0; r < a; r++) {\n          this.createParticle();\n        }\n      }\n    }\n  }, {\n    key: \"createParticle\",\n    value: function value(t, e) {\n      var i = this.parent.pool.get(j);\n      return this.setupParticle(i, t, e), this.dispatch(\"PARTICLE_CREATED\", i), i;\n    }\n  }, {\n    key: \"setupParticle\",\n    value: function value(t, e, i) {\n      var a = this.initializes,\n          r = this.behaviours;\n      e && (a = P.toArray(e)), i && (r = P.toArray(i)), t.reset(), Xt.initialize(this, t, a), t.addBehaviours(r), (t.parent = this).particles.push(t);\n    }\n  }, {\n    key: \"remove\",\n    value: function value() {\n      this.stop(), P.destroyAll(this.particles);\n    }\n  }, {\n    key: \"destroy\",\n    value: function value() {\n      this.dead = !0, this.remove(), this.removeAllInitializers(), this.removeAllBehaviours(), this.parent && this.parent.removeEmitter(this);\n    }\n  }]), Wt);\n\n  function Wt() {\n    var t = 0 < arguments.length && void 0 !== arguments[0] ? arguments[0] : {};\n    o(this, Wt);\n    t = h(this, (Wt.__proto__ || Object.getPrototypeOf(Wt)).call(this, t));\n    return t.particles = [], t.behaviours = [], t.initializes = [], t.emitTime = 0, t.emitSpeed = 0, t.totalTime = -1, t.damping = .006, t.bindEmitter = !0, t.rate = new K(1, .1), t.name = \"Emitter\", t.id = A.id(t.name), t;\n  }\n\n  C.bind(Yt);\n  var Zt = (r(Qt, Yt), t(Qt, [{\n    key: \"addSelfBehaviour\",\n    value: function value() {\n      for (var t = arguments.length, e = Array(t), i = 0; i < t; i++) {\n        e[i] = arguments[i];\n      }\n\n      for (var a = void 0, r = e.length, a = 0; a < r; a++) {\n        var n = e[a];\n        this.selfBehaviours.push(n), n.initialize(this);\n      }\n    }\n  }, {\n    key: \"removeSelfBehaviour\",\n    value: function value(t) {\n      t = this.selfBehaviours.indexOf(t);\n      -1 < t && this.selfBehaviours.splice(t, 1);\n    }\n  }, {\n    key: \"update\",\n    value: function value(t) {\n      if (n(Qt.prototype.__proto__ || Object.getPrototypeOf(Qt.prototype), \"update\", this).call(this, t), !this.sleep) for (var e = this.selfBehaviours.length, i = void 0, i = 0; i < e; i++) {\n        this.selfBehaviours[i].applyBehaviour(this, t, i);\n      }\n    }\n  }]), Qt);\n\n  function Qt(t) {\n    o(this, Qt);\n    t = h(this, (Qt.__proto__ || Object.getPrototypeOf(Qt)).call(this, t));\n    return t.selfBehaviours = [], t;\n  }\n\n  var Kt = (r(Jt, Yt), t(Jt, [{\n    key: \"initEventHandler\",\n    value: function value() {\n      var e = this;\n      this.mousemoveHandler = function (t) {\n        return e.mousemove.call(e, t);\n      }, this.mousedownHandler = function (t) {\n        return e.mousedown.call(e, t);\n      }, this.mouseupHandler = function (t) {\n        return e.mouseup.call(e, t);\n      }, this.mouseTarget.addEventListener(\"mousemove\", this.mousemoveHandler, !1);\n    }\n  }, {\n    key: \"emit\",\n    value: function value() {\n      this._allowEmitting = !0;\n    }\n  }, {\n    key: \"stop\",\n    value: function value() {\n      this._allowEmitting = !1;\n    }\n  }, {\n    key: \"mousemove\",\n    value: function value(t) {\n      t.layerX || 0 === t.layerX ? (this.p.x += (t.layerX - this.p.x) * this.ease, this.p.y += (t.layerY - this.p.y) * this.ease) : !t.offsetX && 0 !== t.offsetX || (this.p.x += (t.offsetX - this.p.x) * this.ease, this.p.y += (t.offsetY - this.p.y) * this.ease), this._allowEmitting && n(Jt.prototype.__proto__ || Object.getPrototypeOf(Jt.prototype), \"emit\", this).call(this, \"once\");\n    }\n  }, {\n    key: \"destroy\",\n    value: function value() {\n      n(Jt.prototype.__proto__ || Object.getPrototypeOf(Jt.prototype), \"destroy\", this).call(this), this.mouseTarget.removeEventListener(\"mousemove\", this.mousemoveHandler, !1);\n    }\n  }]), Jt);\n\n  function Jt(t, e, i) {\n    o(this, Jt);\n    i = h(this, (Jt.__proto__ || Object.getPrototypeOf(Jt)).call(this, i));\n    return i.mouseTarget = P.initValue(t, window), i.ease = P.initValue(e, .7), i._allowEmitting = !1, i.initEventHandler(), i;\n  }\n\n  var $t = (t(te, [{\n    key: \"setStroke\",\n    value: function value(t, e) {\n      t = 0 < arguments.length && void 0 !== t ? t : \"#000000\", e = 1 < arguments.length && void 0 !== e ? e : 1;\n      this.stroke = {\n        color: t,\n        thinkness: e\n      };\n    }\n  }, {\n    key: \"initHandler\",\n    value: function value() {\n      var e = this;\n      this._protonUpdateHandler = function () {\n        e.onProtonUpdate.call(e);\n      }, this._protonUpdateAfterHandler = function () {\n        e.onProtonUpdateAfter.call(e);\n      }, this._emitterAddedHandler = function (t) {\n        e.onEmitterAdded.call(e, t);\n      }, this._emitterRemovedHandler = function (t) {\n        e.onEmitterRemoved.call(e, t);\n      }, this._particleCreatedHandler = function (t) {\n        e.onParticleCreated.call(e, t);\n      }, this._particleUpdateHandler = function (t) {\n        e.onParticleUpdate.call(e, t);\n      }, this._particleDeadHandler = function (t) {\n        e.onParticleDead.call(e, t);\n      };\n    }\n  }, {\n    key: \"init\",\n    value: function value(t) {\n      (this.parent = t).addEventListener(\"PROTON_UPDATE\", this._protonUpdateHandler), t.addEventListener(\"PROTON_UPDATE_AFTER\", this._protonUpdateAfterHandler), t.addEventListener(\"EMITTER_ADDED\", this._emitterAddedHandler), t.addEventListener(\"EMITTER_REMOVED\", this._emitterRemovedHandler), t.addEventListener(\"PARTICLE_CREATED\", this._particleCreatedHandler), t.addEventListener(\"PARTICLE_UPDATE\", this._particleUpdateHandler), t.addEventListener(\"PARTICLE_DEAD\", this._particleDeadHandler);\n    }\n  }, {\n    key: \"resize\",\n    value: function value() {}\n  }, {\n    key: \"destroy\",\n    value: function value() {\n      this.remove();\n    }\n  }, {\n    key: \"remove\",\n    value: function value() {\n      this.parent.removeEventListener(\"PROTON_UPDATE\", this._protonUpdateHandler), this.parent.removeEventListener(\"PROTON_UPDATE_AFTER\", this._protonUpdateAfterHandler), this.parent.removeEventListener(\"EMITTER_ADDED\", this._emitterAddedHandler), this.parent.removeEventListener(\"EMITTER_REMOVED\", this._emitterRemovedHandler), this.parent.removeEventListener(\"PARTICLE_CREATED\", this._particleCreatedHandler), this.parent.removeEventListener(\"PARTICLE_UPDATE\", this._particleUpdateHandler), this.parent.removeEventListener(\"PARTICLE_DEAD\", this._particleDeadHandler), this.parent = null;\n    }\n  }, {\n    key: \"onProtonUpdate\",\n    value: function value() {}\n  }, {\n    key: \"onProtonUpdateAfter\",\n    value: function value() {}\n  }, {\n    key: \"onEmitterAdded\",\n    value: function value() {}\n  }, {\n    key: \"onEmitterRemoved\",\n    value: function value() {}\n  }, {\n    key: \"onParticleCreated\",\n    value: function value() {}\n  }, {\n    key: \"onParticleUpdate\",\n    value: function value() {}\n  }, {\n    key: \"onParticleDead\",\n    value: function value() {}\n  }]), te);\n\n  function te(t, e) {\n    o(this, te), this.pool = new T(), this.element = t, this.stroke = e, this.circleConf = {\n      isCircle: !0\n    }, this.initHandler(), this.name = \"BaseRenderer\";\n  }\n\n  var ee = (r(ie, $t), t(ie, [{\n    key: \"resize\",\n    value: function value(t, e) {\n      this.element.width = t, this.element.height = e;\n    }\n  }, {\n    key: \"onProtonUpdate\",\n    value: function value() {\n      this.context.clearRect(0, 0, this.element.width, this.element.height);\n    }\n  }, {\n    key: \"onParticleCreated\",\n    value: function value(t) {\n      t.body ? x(t.body, this.addImg2Body, t) : t.color = t.color || \"#ff0000\";\n    }\n  }, {\n    key: \"onParticleUpdate\",\n    value: function value(t) {\n      t.body ? t.body instanceof Image && this.drawImage(t) : this.drawCircle(t);\n    }\n  }, {\n    key: \"onParticleDead\",\n    value: function value(t) {\n      t.body = null;\n    }\n  }, {\n    key: \"addImg2Body\",\n    value: function value(t, e) {\n      e.body = t;\n    }\n  }, {\n    key: \"drawImage\",\n    value: function value(t) {\n      var e,\n          i = t.body.width * t.scale | 0,\n          a = t.body.height * t.scale | 0,\n          r = t.p.x - i / 2,\n          n = t.p.y - a / 2;\n      t.color ? (t.data.buffer || (t.data.buffer = this.createBuffer(t.body)), (e = t.data.buffer.getContext(\"2d\")).clearRect(0, 0, t.data.buffer.width, t.data.buffer.height), e.globalAlpha = t.alpha, e.drawImage(t.body, 0, 0), e.globalCompositeOperation = \"source-atop\", e.fillStyle = H.rgbToHex(t.rgb), e.fillRect(0, 0, t.data.buffer.width, t.data.buffer.height), e.globalCompositeOperation = \"source-over\", e.globalAlpha = 1, this.context.drawImage(t.data.buffer, 0, 0, t.data.buffer.width, t.data.buffer.height, r, n, i, a)) : (this.context.save(), this.context.globalAlpha = t.alpha, this.context.translate(t.p.x, t.p.y), this.context.rotate(s.degreeTransform(t.rotation)), this.context.translate(-t.p.x, -t.p.y), this.context.drawImage(t.body, 0, 0, t.body.width, t.body.height, r, n, i, a), this.context.globalAlpha = 1, this.context.restore());\n    }\n  }, {\n    key: \"drawCircle\",\n    value: function value(t) {\n      t.rgb ? this.context.fillStyle = \"rgba(\" + t.rgb.r + \",\" + t.rgb.g + \",\" + t.rgb.b + \",\" + t.alpha + \")\" : this.context.fillStyle = t.color, this.context.beginPath(), this.context.arc(t.p.x, t.p.y, t.radius, 0, 2 * Math.PI, !0), this.stroke && (this.context.strokeStyle = this.stroke.color, this.context.lineWidth = this.stroke.thinkness, this.context.stroke()), this.context.closePath(), this.context.fill();\n    }\n  }, {\n    key: \"createBuffer\",\n    value: function value(t) {\n      if (t instanceof Image) {\n        var e = t.width + \"_\" + t.height,\n            i = this.bufferCache[e];\n        return i || ((i = document.createElement(\"canvas\")).width = t.width, i.height = t.height, this.bufferCache[e] = i), i;\n      }\n    }\n  }]), ie);\n\n  function ie(t) {\n    o(this, ie);\n    t = h(this, (ie.__proto__ || Object.getPrototypeOf(ie)).call(this, t));\n    return t.stroke = null, t.context = t.element.getContext(\"2d\"), t.bufferCache = {}, t.name = \"CanvasRenderer\", t;\n  }\n\n  var ae = (r(re, $t), t(re, [{\n    key: \"onParticleCreated\",\n    value: function value(t) {\n      t.body ? x(t.body, this.addImg2Body, t) : (t.body = this.pool.get(this.circleConf, t), this.element.appendChild(t.body));\n    }\n  }, {\n    key: \"onParticleUpdate\",\n    value: function value(t) {\n      this.bodyReady(t) && (this.transform3d ? v.transform3d(t.body, t.p.x, t.p.y, t.scale, t.rotation) : v.transform(t.body, t.p.x, t.p.y, t.scale, t.rotation), t.body.style.opacity = t.alpha, t.body.isCircle && (t.body.style.backgroundColor = t.color || \"#ff0000\"));\n    }\n  }, {\n    key: \"onParticleDead\",\n    value: function value(t) {\n      this.bodyReady(t) && (this.element.removeChild(t.body), this.pool.expire(t.body), t.body = null);\n    }\n  }, {\n    key: \"bodyReady\",\n    value: function value(t) {\n      return \"object\" === i(t.body) && t.body && !t.body.isInner;\n    }\n  }, {\n    key: \"addImg2Body\",\n    value: function value(t, e) {\n      e.dead || (e.body = this.pool.get(t, e), v.resize(e.body, t.width, t.height), this.element.appendChild(e.body));\n    }\n  }, {\n    key: \"createBody\",\n    value: function value(t, e) {\n      return t.isCircle ? this.createCircle(e) : this.createSprite(t, e);\n    }\n  }, {\n    key: \"createCircle\",\n    value: function value(t) {\n      var e = v.createDiv(t.id + \"_dom\", 2 * t.radius, 2 * t.radius);\n      return e.style.borderRadius = t.radius + \"px\", this.stroke && (e.style.borderColor = this.stroke.color, e.style.borderWidth = this.stroke.thinkness + \"px\"), e.isCircle = !0, e;\n    }\n  }, {\n    key: \"createSprite\",\n    value: function value(t, e) {\n      var i = \"string\" == typeof t ? t : t.src,\n          t = v.createDiv(e.id + \"_dom\", t.width, t.height);\n      return t.style.backgroundImage = \"url(\" + i + \")\", t;\n    }\n  }]), re);\n\n  function re(t) {\n    o(this, re);\n    var i = h(this, (re.__proto__ || Object.getPrototypeOf(re)).call(this, t));\n    return i.stroke = null, i.pool.create = function (t, e) {\n      return i.createBody(t, e);\n    }, i.addImg2Body = i.addImg2Body.bind(i), i.transform3d = !1, i.name = \"DomRenderer\", i;\n  }\n\n  var ne = (r(se, $t), t(se, [{\n    key: \"onParticleCreated\",\n    value: function value(t) {\n      t.body ? this.createSprite(t) : this.createCircle(t), this.element.addChild(t.body);\n    }\n  }, {\n    key: \"onParticleUpdate\",\n    value: function value(t) {\n      t.body && (t.body.x = t.p.x, t.body.y = t.p.y, t.body.alpha = t.alpha, t.body.scaleX = t.body.scaleY = t.scale, t.body.rotation = t.rotation);\n    }\n  }, {\n    key: \"onParticleDead\",\n    value: function value(t) {\n      t.body && (t.body.parent && t.body.parent.removeChild(t.body), this.pool.expire(t.body), t.body = null), t.graphics && this.pool.expire(t.graphics);\n    }\n  }, {\n    key: \"createSprite\",\n    value: function value(t) {\n      t.body = this.pool.get(t.body), t.body.parent || t.body.image && (t.body.regX = t.body.image.width / 2, t.body.regY = t.body.image.height / 2);\n    }\n  }, {\n    key: \"createCircle\",\n    value: function value(t) {\n      var e = this.pool.get(createjs.Graphics);\n      this.stroke && (this.stroke instanceof String ? e.beginStroke(this.stroke) : e.beginStroke(\"#000000\")), e.beginFill(t.color || \"#ff0000\").drawCircle(0, 0, t.radius);\n      var i = this.pool.get(createjs.Shape, [e]);\n      t.body = i, t.graphics = e;\n    }\n  }]), se);\n\n  function se(t, e) {\n    o(this, se);\n    t = h(this, (se.__proto__ || Object.getPrototypeOf(se)).call(this, t));\n    return t.stroke = e, t.name = \"EaselRenderer\", t;\n  }\n\n  var oe = (r(he, $t), t(he, [{\n    key: \"resize\",\n    value: function value(t, e) {\n      this.element.width = t, this.element.height = e;\n    }\n  }, {\n    key: \"createImageData\",\n    value: function value(t) {\n      this.rectangle = t || new Z(0, 0, this.element.width, this.element.height), this.imageData = this.context.createImageData(this.rectangle.width, this.rectangle.height), this.context.putImageData(this.imageData, this.rectangle.x, this.rectangle.y);\n    }\n  }, {\n    key: \"onProtonUpdate\",\n    value: function value() {\n      this.context.clearRect(this.rectangle.x, this.rectangle.y, this.rectangle.width, this.rectangle.height), this.imageData = this.context.getImageData(this.rectangle.x, this.rectangle.y, this.rectangle.width, this.rectangle.height);\n    }\n  }, {\n    key: \"onProtonUpdateAfter\",\n    value: function value() {\n      this.context.putImageData(this.imageData, this.rectangle.x, this.rectangle.y);\n    }\n  }, {\n    key: \"onParticleCreated\",\n    value: function value() {}\n  }, {\n    key: \"onParticleUpdate\",\n    value: function value(t) {\n      this.imageData && this.setPixel(this.imageData, Math.floor(t.p.x - this.rectangle.x), Math.floor(t.p.y - this.rectangle.y), t);\n    }\n  }, {\n    key: \"setPixel\",\n    value: function value(t, e, i, a) {\n      var r = a.rgb;\n      e < 0 || e > this.element.width || i < 0 || i > this.elementwidth || (e = 4 * ((i >> 0) * t.width + (e >> 0)), t.data[e] = r.r, t.data[1 + e] = r.g, t.data[2 + e] = r.b, t.data[3 + e] = 255 * a.alpha);\n    }\n  }, {\n    key: \"onParticleDead\",\n    value: function value() {}\n  }]), he);\n\n  function he(t, e) {\n    o(this, he);\n    t = h(this, (he.__proto__ || Object.getPrototypeOf(he)).call(this, t));\n    return t.context = t.element.getContext(\"2d\"), t.imageData = null, t.rectangle = null, t.rectangle = e, t.createImageData(e), t.name = \"PixelRenderer\", t;\n  }\n\n  var le = void 0,\n      ue = (r(ce, $t), t(ce, [{\n    key: \"setPIXI\",\n    value: function value(t) {\n      try {\n        le = t || {\n          Sprite: {}\n        }, this.createFromImage = le.Sprite.from || le.Sprite.fromImage;\n      } catch (t) {}\n    }\n  }, {\n    key: \"onProtonUpdate\",\n    value: function value() {}\n  }, {\n    key: \"onParticleCreated\",\n    value: function value(t) {\n      t.body ? t.body = this.pool.get(t.body, t) : t.body = this.pool.get(this.circleConf, t), this.blendMode && (t.body.blendMode = this.blendMode), this.element.addChild(t.body);\n    }\n  }, {\n    key: \"onParticleUpdate\",\n    value: function value(t) {\n      this.transform(t, t.body), !0 !== this.setColor && !0 !== this.color || (t.body.tint = H.getHex16FromParticle(t));\n    }\n  }, {\n    key: \"onParticleDead\",\n    value: function value(t) {\n      this.element.removeChild(t.body), this.pool.expire(t.body), t.body = null;\n    }\n  }, {\n    key: \"destroy\",\n    value: function value(t) {\n      n(ce.prototype.__proto__ || Object.getPrototypeOf(ce.prototype), \"destroy\", this).call(this), this.pool.destroy();\n\n      for (var e = t.length; e--;) {\n        var i = t[e];\n        i.body && this.element.removeChild(i.body);\n      }\n    }\n  }, {\n    key: \"transform\",\n    value: function value(t, e) {\n      e.x = t.p.x, e.y = t.p.y, e.alpha = t.alpha, e.scale.x = t.scale, e.scale.y = t.scale, e.rotation = t.rotation * s.PI_180;\n    }\n  }, {\n    key: \"createBody\",\n    value: function value(t, e) {\n      return t.isCircle ? this.createCircle(e) : this.createSprite(t);\n    }\n  }, {\n    key: \"createSprite\",\n    value: function value(t) {\n      t = t.isInner ? this.createFromImage(t.src) : new le.Sprite(t);\n      return t.anchor.x = .5, t.anchor.y = .5, t;\n    }\n  }, {\n    key: \"createCircle\",\n    value: function value(t) {\n      var e,\n          i = new le.Graphics();\n      return this.stroke && (e = this.stroke instanceof String ? this.stroke : 0, i.beginStroke(e)), i.beginFill(t.color || 36077), i.drawCircle(0, 0, t.radius), i.endFill(), i;\n    }\n  }]), ce);\n\n  function ce(t, e) {\n    o(this, ce);\n    var i = h(this, (ce.__proto__ || Object.getPrototypeOf(ce)).call(this, t));\n    return i.stroke = e, i.color = !1, i.setColor = !1, i.blendMode = null, i.pool.create = function (t, e) {\n      return i.createBody(t, e);\n    }, i.setPIXI(window.PIXI), i.name = \"PixiRenderer\", i;\n  }\n\n  var de = (t(ye, [{\n    key: \"set\",\n    value: function value(t, e) {\n      0 === e ? X.set(t, this.mats[0]) : X.multiply(this.mats[e - 1], t, this.mats[e]), this.size = Math.max(this.size, e + 1);\n    }\n  }, {\n    key: \"push\",\n    value: function value(t) {\n      0 === this.size ? X.set(t, this.mats[0]) : X.multiply(this.mats[this.size - 1], t, this.mats[this.size]), this.size++;\n    }\n  }, {\n    key: \"pop\",\n    value: function value() {\n      0 < this.size && this.size--;\n    }\n  }, {\n    key: \"top\",\n    value: function value() {\n      return this.mats[this.size - 1];\n    }\n  }]), ye);\n\n  function ye() {\n    o(this, ye), this.mats = [];\n\n    for (var t = this.size = 0; t < 20; t++) {\n      this.mats.push(X.create([0, 0, 0, 0, 0, 0, 0, 0, 0]));\n    }\n  }\n\n  r(pe, $t), t(pe, [{\n    key: \"init\",\n    value: function value(t) {\n      n(pe.prototype.__proto__ || Object.getPrototypeOf(pe.prototype), \"init\", this).call(this, t), this.resize(this.element.width, this.element.height);\n    }\n  }, {\n    key: \"resize\",\n    value: function value(t, e) {\n      this.umat[4] = -2, this.umat[7] = 1, this.smat[0] = 1 / t, this.smat[4] = 1 / e, this.mstack.set(this.umat, 0), this.mstack.set(this.smat, 1), this.gl.viewport(0, 0, t, e), this.element.width = t, this.element.height = e;\n    }\n  }, {\n    key: \"setMaxRadius\",\n    value: function value(t) {\n      this.circleCanvasURL = this.createCircle(t);\n    }\n  }, {\n    key: \"getVertexShader\",\n    value: function value() {\n      return [\"uniform vec2 viewport;\", \"attribute vec2 aVertexPosition;\", \"attribute vec2 aTextureCoord;\", \"uniform mat3 tMat;\", \"varying vec2 vTextureCoord;\", \"varying float alpha;\", \"void main() {\", \"vec3 v = tMat * vec3(aVertexPosition, 1.0);\", \"gl_Position = vec4(v.x, v.y, 0, 1);\", \"vTextureCoord = aTextureCoord;\", \"alpha = tMat[0][2];\", \"}\"].join(\"\\n\");\n    }\n  }, {\n    key: \"getFragmentShader\",\n    value: function value() {\n      return [\"precision mediump float;\", \"varying vec2 vTextureCoord;\", \"varying float alpha;\", \"uniform sampler2D uSampler;\", \"uniform vec4 color;\", \"uniform bool useTexture;\", \"uniform vec3 uColor;\", \"void main() {\", \"vec4 textureColor = texture2D(uSampler, vTextureCoord);\", \"gl_FragColor = textureColor * vec4(uColor, 1.0);\", \"gl_FragColor.w *= alpha;\", \"}\"].join(\"\\n\");\n    }\n  }, {\n    key: \"initVar\",\n    value: function value() {\n      this.mstack = new de(), this.umat = X.create([2, 0, 1, 0, -2, 0, -1, 1, 1]), this.smat = X.create([.01, 0, 1, 0, .01, 0, 0, 0, 1]), this.texturebuffers = {};\n    }\n  }, {\n    key: \"blendEquation\",\n    value: function value(t) {\n      this.gl.blendEquation(this.gl[t]);\n    }\n  }, {\n    key: \"blendFunc\",\n    value: function value(t, e) {\n      this.gl.blendFunc(this.gl[t], this.gl[e]);\n    }\n  }, {\n    key: \"getShader\",\n    value: function value(t, e, i) {\n      i = i ? t.createShader(t.FRAGMENT_SHADER) : t.createShader(t.VERTEX_SHADER);\n      return t.shaderSource(i, e), t.compileShader(i), t.getShaderParameter(i, t.COMPILE_STATUS) ? i : (alert(t.getShaderInfoLog(i)), null);\n    }\n  }, {\n    key: \"initShaders\",\n    value: function value() {\n      var t = this.getShader(this.gl, this.getFragmentShader(), !0),\n          e = this.getShader(this.gl, this.getVertexShader(), !1);\n      this.sprogram = this.gl.createProgram(), this.gl.attachShader(this.sprogram, e), this.gl.attachShader(this.sprogram, t), this.gl.linkProgram(this.sprogram), this.gl.getProgramParameter(this.sprogram, this.gl.LINK_STATUS) || alert(\"Could not initialise shaders\"), this.gl.useProgram(this.sprogram), this.sprogram.vpa = this.gl.getAttribLocation(this.sprogram, \"aVertexPosition\"), this.sprogram.tca = this.gl.getAttribLocation(this.sprogram, \"aTextureCoord\"), this.gl.enableVertexAttribArray(this.sprogram.tca), this.gl.enableVertexAttribArray(this.sprogram.vpa), this.sprogram.tMatUniform = this.gl.getUniformLocation(this.sprogram, \"tMat\"), this.sprogram.samplerUniform = this.gl.getUniformLocation(this.sprogram, \"uSampler\"), this.sprogram.useTex = this.gl.getUniformLocation(this.sprogram, \"useTexture\"), this.sprogram.color = this.gl.getUniformLocation(this.sprogram, \"uColor\"), this.gl.uniform1i(this.sprogram.useTex, 1);\n    }\n  }, {\n    key: \"initBuffers\",\n    value: function value() {\n      var t;\n      this.unitIBuffer = this.gl.createBuffer(), this.gl.bindBuffer(this.gl.ELEMENT_ARRAY_BUFFER, this.unitIBuffer), this.gl.bufferData(this.gl.ELEMENT_ARRAY_BUFFER, new Uint16Array([0, 3, 1, 0, 2, 3]), this.gl.STATIC_DRAW);\n\n      for (var e = void 0, i = [], e = 0; e < 100; e++) {\n        i.push(e);\n      }\n\n      for (t = new Uint16Array(i), this.unitI33 = this.gl.createBuffer(), this.gl.bindBuffer(this.gl.ELEMENT_ARRAY_BUFFER, this.unitI33), this.gl.bufferData(this.gl.ELEMENT_ARRAY_BUFFER, t, this.gl.STATIC_DRAW), i = [], e = 0; e < 100; e++) {\n        i.push(e, e + 1, e + 2);\n      }\n\n      t = new Uint16Array(i), this.stripBuffer = this.gl.createBuffer(), this.gl.bindBuffer(this.gl.ELEMENT_ARRAY_BUFFER, this.stripBuffer), this.gl.bufferData(this.gl.ELEMENT_ARRAY_BUFFER, t, this.gl.STATIC_DRAW);\n    }\n  }, {\n    key: \"createCircle\",\n    value: function value(t) {\n      this.circleCanvasRadius = c(P.initValue(t, 32));\n      var e = v.createCanvas(\"circle_canvas\", 2 * this.circleCanvasRadius, 2 * this.circleCanvasRadius),\n          t = e.getContext(\"2d\");\n      return t.beginPath(), t.arc(this.circleCanvasRadius, this.circleCanvasRadius, this.circleCanvasRadius, 0, 2 * Math.PI, !0), t.closePath(), t.fillStyle = \"#FFF\", t.fill(), e.toDataURL();\n    }\n  }, {\n    key: \"drawImg2Canvas\",\n    value: function value(t) {\n      var e = t.body.width,\n          i = t.body.height,\n          a = c(t.body.width),\n          r = c(t.body.height),\n          n = t.body.width / a,\n          s = t.body.height / r;\n      this.texturebuffers[t.data.src] || (this.texturebuffers[t.data.src] = [this.gl.createTexture(), this.gl.createBuffer(), this.gl.createBuffer()]), t.data.texture = this.texturebuffers[t.data.src][0], t.data.vcBuffer = this.texturebuffers[t.data.src][1], t.data.tcBuffer = this.texturebuffers[t.data.src][2], this.gl.bindBuffer(this.gl.ARRAY_BUFFER, t.data.tcBuffer), this.gl.bufferData(this.gl.ARRAY_BUFFER, new Float32Array([0, 0, n, 0, 0, s, s, s]), this.gl.STATIC_DRAW), this.gl.bindBuffer(this.gl.ARRAY_BUFFER, t.data.vcBuffer), this.gl.bufferData(this.gl.ARRAY_BUFFER, new Float32Array([0, 0, e, 0, 0, i, e, i]), this.gl.STATIC_DRAW);\n      r = t.data.canvas.getContext(\"2d\").getImageData(0, 0, a, r);\n      this.gl.bindTexture(this.gl.TEXTURE_2D, t.data.texture), this.gl.texImage2D(this.gl.TEXTURE_2D, 0, this.gl.RGBA, this.gl.RGBA, this.gl.UNSIGNED_BYTE, r), this.gl.texParameteri(this.gl.TEXTURE_2D, this.gl.TEXTURE_MAG_FILTER, this.gl.LINEAR), this.gl.texParameteri(this.gl.TEXTURE_2D, this.gl.TEXTURE_MIN_FILTER, this.gl.LINEAR_MIPMAP_NEAREST), this.gl.generateMipmap(this.gl.TEXTURE_2D), t.data.textureLoaded = !0, t.data.textureWidth = e, t.data.textureHeight = i;\n    }\n  }, {\n    key: \"onProtonUpdate\",\n    value: function value() {}\n  }, {\n    key: \"onParticleCreated\",\n    value: function value(t) {\n      t.data.textureLoaded = !1, t.data.tmat = X.create(), t.data.tmat[8] = 1, t.data.imat = X.create(), t.data.imat[8] = 1, t.body ? x(t.body, this.addImg2Body, t) : (x(this.circleCanvasURL, this.addImg2Body, t), t.data.oldScale = t.radius / this.circleCanvasRadius);\n    }\n  }, {\n    key: \"addImg2Body\",\n    value: function value(t, e) {\n      e.dead || (e.body = t, e.data.src = t.src, e.data.canvas = k(t), e.data.oldScale = 1, this.drawImg2Canvas(e));\n    }\n  }, {\n    key: \"onParticleUpdate\",\n    value: function value(t) {\n      t.data.textureLoaded && (this.updateMatrix(t), this.gl.uniform3f(this.sprogram.color, t.rgb.r / 255, t.rgb.g / 255, t.rgb.b / 255), this.gl.uniformMatrix3fv(this.sprogram.tMatUniform, !1, this.mstack.top()), this.gl.bindBuffer(this.gl.ARRAY_BUFFER, t.data.vcBuffer), this.gl.vertexAttribPointer(this.sprogram.vpa, 2, this.gl.FLOAT, !1, 0, 0), this.gl.bindBuffer(this.gl.ARRAY_BUFFER, t.data.tcBuffer), this.gl.vertexAttribPointer(this.sprogram.tca, 2, this.gl.FLOAT, !1, 0, 0), this.gl.bindTexture(this.gl.TEXTURE_2D, t.data.texture), this.gl.uniform1i(this.sprogram.samplerUniform, 0), this.gl.bindBuffer(this.gl.ELEMENT_ARRAY_BUFFER, this.unitIBuffer), this.gl.drawElements(this.gl.TRIANGLES, 6, this.gl.UNSIGNED_SHORT, 0), this.mstack.pop());\n    }\n  }, {\n    key: \"onParticleDead\",\n    value: function value() {}\n  }, {\n    key: \"updateMatrix\",\n    value: function value(t) {\n      var e = d(-t.data.textureWidth / 2, -t.data.textureHeight / 2),\n          i = d(t.p.x, t.p.y),\n          a = t.rotation * s.PI_180,\n          r = y(a),\n          a = t.scale * t.data.oldScale,\n          a = p(a, a),\n          a = f(e, a),\n          a = f(a, r);\n      a = f(a, i), X.inverse(a, t.data.imat), a[2] = t.alpha, this.mstack.push(a);\n    }\n  }]), C = pe;\n\n  function pe(t) {\n    o(this, pe);\n    t = h(this, (pe.__proto__ || Object.getPrototypeOf(pe)).call(this, t));\n    return t.gl = t.element.getContext(\"experimental-webgl\", {\n      antialias: !0,\n      stencil: !1,\n      depth: !1\n    }), t.gl || alert(\"Sorry your browser do not suppest WebGL!\"), t.initVar(), t.setMaxRadius(), t.initShaders(), t.initBuffers(), t.gl.blendEquation(t.gl.FUNC_ADD), t.gl.blendFunc(t.gl.SRC_ALPHA, t.gl.ONE_MINUS_SRC_ALPHA), t.gl.enable(t.gl.BLEND), t.addImg2Body = t.addImg2Body.bind(t), t.name = \"WebGLRenderer\", t;\n  }\n\n  r(fe, $t), $t = fe;\n\n  function fe(t) {\n    o(this, fe);\n    t = h(this, (fe.__proto__ || Object.getPrototypeOf(fe)).call(this, t));\n    return t.name = \"CustomRenderer\", t;\n  }\n\n  var ve = (r(ge, at), t(ge, [{\n    key: \"getPosition\",\n    value: function value() {\n      return this.random = Math.random(), this.vector.x = this.x1 + this.random * this.length * Math.cos(this.gradient), this.vector.y = this.y1 + this.random * this.length * Math.sin(this.gradient), this.vector;\n    }\n  }, {\n    key: \"getDirection\",\n    value: function value(t, e) {\n      var i = this.dy,\n          a = -this.dx;\n      return 0 < (i * t + a * e + this.dot) * (0 == a ? 1 : a);\n    }\n  }, {\n    key: \"getDistance\",\n    value: function value(t, e) {\n      return (this.dy * t + -this.dx * e + this.dot) / Math.sqrt(this.xxyy);\n    }\n  }, {\n    key: \"getSymmetric\",\n    value: function value(t) {\n      var e = t.getGradient(),\n          i = 2 * (this.getGradient() - e),\n          a = t.x,\n          e = t.y;\n      return t.x = a * Math.cos(i) - e * Math.sin(i), t.y = a * Math.sin(i) + e * Math.cos(i), t;\n    }\n  }, {\n    key: \"getGradient\",\n    value: function value() {\n      return Math.atan2(this.dy, this.dx);\n    }\n  }, {\n    key: \"rangeOut\",\n    value: function value(t) {\n      if (Math.abs(this.getGradient()) <= s.PI / 4) {\n        if (t.p.x <= this.maxx && t.p.x >= this.minx) return !0;\n      } else if (t.p.y <= this.maxy && t.p.y >= this.miny) return !0;\n\n      return !1;\n    }\n  }, {\n    key: \"getLength\",\n    value: function value() {\n      return Math.sqrt(this.dx * this.dx + this.dy * this.dy);\n    }\n  }, {\n    key: \"crossing\",\n    value: function value(t) {\n      \"dead\" === this.crossType ? \">\" === this.direction || \"R\" === this.direction || \"right\" === this.direction || \"down\" === this.direction ? this.rangeOut(t) && this.getDirection(t.p.x, t.p.y) && (t.dead = !0) : this.rangeOut(t) && (this.getDirection(t.p.x, t.p.y) || (t.dead = !0)) : \"bound\" === this.crossType ? this.rangeOut(t) && this.getDistance(t.p.x, t.p.y) <= t.radius && (0 === this.dx ? t.v.x *= -1 : 0 === this.dy ? t.v.y *= -1 : this.getSymmetric(t.v)) : \"cross\" === this.crossType && this.alert && (console.error(\"Sorry, LineZone does not support cross method!\"), this.alert = !1);\n    }\n  }]), ge);\n\n  function ge(t, e, i, a, r) {\n    o(this, ge);\n    var n = h(this, (ge.__proto__ || Object.getPrototypeOf(ge)).call(this));\n    return 0 <= i - t ? (n.x1 = t, n.y1 = e, n.x2 = i, n.y2 = a) : (n.x1 = i, n.y1 = a, n.x2 = t, n.y2 = e), n.dx = n.x2 - n.x1, n.dy = n.y2 - n.y1, n.minx = Math.min(n.x1, n.x2), n.miny = Math.min(n.y1, n.y2), n.maxx = Math.max(n.x1, n.x2), n.maxy = Math.max(n.y1, n.y2), n.dot = n.x2 * n.y1 - n.x1 * n.y2, n.xxyy = n.dx * n.dx + n.dy * n.dy, n.gradient = n.getGradient(), n.length = n.getLength(), n.direction = P.initValue(r, \">\"), n;\n  }\n\n  var me = (r(be, at), t(be, [{\n    key: \"getPosition\",\n    value: function value() {\n      return this.angle = s.PIx2 * Math.random(), this.randomRadius = Math.random() * this.radius, this.vector.x = this.x + this.randomRadius * Math.cos(this.angle), this.vector.y = this.y + this.randomRadius * Math.sin(this.angle), this.vector;\n    }\n  }, {\n    key: \"setCenter\",\n    value: function value(t, e) {\n      this.center.x = t, this.center.y = e;\n    }\n  }, {\n    key: \"crossing\",\n    value: function value(t) {\n      var e = t.p.distanceTo(this.center);\n      \"dead\" === this.crossType ? e - t.radius > this.radius && (t.dead = !0) : \"bound\" === this.crossType ? e + t.radius >= this.radius && this.getSymmetric(t) : \"cross\" === this.crossType && this.alert && (console.error(\"Sorry, CircleZone does not support cross method!\"), this.alert = !1);\n    }\n  }, {\n    key: \"getSymmetric\",\n    value: function value(t) {\n      var e = t.v.getGradient(),\n          i = 2 * (this.getGradient(t) - e),\n          a = t.v.x,\n          e = t.v.y;\n      t.v.x = a * Math.cos(i) - e * Math.sin(i), t.v.y = a * Math.sin(i) + e * Math.cos(i);\n    }\n  }, {\n    key: \"getGradient\",\n    value: function value(t) {\n      return -s.PI_2 + Math.atan2(t.p.y - this.center.y, t.p.x - this.center.x);\n    }\n  }]), be);\n\n  function be(t, e, i) {\n    o(this, be);\n    var a = h(this, (be.__proto__ || Object.getPrototypeOf(be)).call(this));\n    return a.x = t, a.y = e, a.radius = i, a.angle = 0, a.center = {\n      x: t,\n      y: e\n    }, a;\n  }\n\n  var _e = (r(xe, at), t(xe, [{\n    key: \"getPosition\",\n    value: function value() {\n      return this.vector.x = this.x + Math.random() * this.width, this.vector.y = this.y + Math.random() * this.height, this.vector;\n    }\n  }, {\n    key: \"crossing\",\n    value: function value(t) {\n      \"dead\" === this.crossType ? ((t.p.x + t.radius < this.x || t.p.x - t.radius > this.x + this.width) && (t.dead = !0), (t.p.y + t.radius < this.y || t.p.y - t.radius > this.y + this.height) && (t.dead = !0)) : \"bound\" === this.crossType ? (t.p.x - t.radius < this.x ? (t.p.x = this.x + t.radius, t.v.x *= -1) : t.p.x + t.radius > this.x + this.width && (t.p.x = this.x + this.width - t.radius, t.v.x *= -1), t.p.y - t.radius < this.y ? (t.p.y = this.y + t.radius, t.v.y *= -1) : t.p.y + t.radius > this.y + this.height && (t.p.y = this.y + this.height - t.radius, t.v.y *= -1)) : \"cross\" === this.crossType && (t.p.x + t.radius < this.x && t.v.x <= 0 ? t.p.x = this.x + this.width + t.radius : t.p.x - t.radius > this.x + this.width && 0 <= t.v.x && (t.p.x = this.x - t.radius), t.p.y + t.radius < this.y && t.v.y <= 0 ? t.p.y = this.y + this.height + t.radius : t.p.y - t.radius > this.y + this.height && 0 <= t.v.y && (t.p.y = this.y - t.radius));\n    }\n  }]), xe);\n\n  function xe(t, e, i, a) {\n    o(this, xe);\n    var r = h(this, (xe.__proto__ || Object.getPrototypeOf(xe)).call(this));\n    return r.x = t, r.y = e, r.width = i, r.height = a, r;\n  }\n\n  r(ke, at), t(ke, [{\n    key: \"reset\",\n    value: function value(t, e, i, a) {\n      this.imageData = t, this.x = P.initValue(e, 0), this.y = P.initValue(i, 0), this.d = P.initValue(a, 2), this.vectors = [], this.setVectors();\n    }\n  }, {\n    key: \"setVectors\",\n    value: function value() {\n      for (var t = void 0, e = void 0, i = this.imageData.width, a = this.imageData.height, t = 0; t < i; t += this.d) {\n        for (e = 0; e < a; e += this.d) {\n          var r = 4 * ((e >> 0) * i + (t >> 0));\n          0 < this.imageData.data[3 + r] && this.vectors.push({\n            x: t + this.x,\n            y: e + this.y\n          });\n        }\n      }\n\n      return this.vector;\n    }\n  }, {\n    key: \"getBound\",\n    value: function value(t, e) {\n      t = 4 * ((e >> 0) * this.imageData.width + (t >> 0));\n      return 0 < this.imageData.data[3 + t];\n    }\n  }, {\n    key: \"getPosition\",\n    value: function value() {\n      var t = P.getRandFromArray(this.vectors);\n      return this.vector.copy(t);\n    }\n  }, {\n    key: \"getColor\",\n    value: function value(t, e) {\n      t -= this.x;\n      t = 4 * (((e -= this.y) >> 0) * this.imageData.width + (t >> 0));\n      return {\n        r: this.imageData.data[t],\n        g: this.imageData.data[1 + t],\n        b: this.imageData.data[2 + t],\n        a: this.imageData.data[3 + t]\n      };\n    }\n  }, {\n    key: \"crossing\",\n    value: function value(t) {\n      \"dead\" === this.crossType ? this.getBound(t.p.x - this.x, t.p.y - this.y) ? t.dead = !0 : t.dead = !1 : \"bound\" === this.crossType && (this.getBound(t.p.x - this.x, t.p.y - this.y) || t.v.negate());\n    }\n  }]), r = ke;\n\n  function ke(t, e, i, a) {\n    o(this, ke);\n    var r = h(this, (ke.__proto__ || Object.getPrototypeOf(ke)).call(this));\n    return r.reset(t, e, i, a), r;\n  }\n\n  t = {\n    addEventListener: function addEventListener(t, e) {\n      t.addEventListener(\"PROTON_UPDATE_AFTER\", function () {\n        return e();\n      });\n    },\n    getStyle: function getStyle(t) {\n      t = H.hexToRgb(0 < arguments.length && void 0 !== t ? t : \"#ff0000\");\n      return \"rgba(\" + t.r + \", \" + t.g + \", \" + t.b + \", 0.5)\";\n    },\n    drawZone: function drawZone(t, e, i, a) {\n      var r = e.getContext(\"2d\"),\n          n = this.getStyle();\n      this.addEventListener(t, function () {\n        a && r.clearRect(0, 0, e.width, e.height), i instanceof nt ? (r.beginPath(), r.fillStyle = n, r.arc(i.x, i.y, 10, 0, 2 * Math.PI, !0), r.fill(), r.closePath()) : i instanceof ve ? (r.beginPath(), r.strokeStyle = n, r.moveTo(i.x1, i.y1), r.lineTo(i.x2, i.y2), r.stroke(), r.closePath()) : i instanceof _e ? (r.beginPath(), r.strokeStyle = n, r.drawRect(i.x, i.y, i.width, i.height), r.stroke(), r.closePath()) : i instanceof me && (r.beginPath(), r.strokeStyle = n, r.arc(i.x, i.y, i.radius, 0, 2 * Math.PI, !0), r.stroke(), r.closePath());\n      });\n    },\n    drawEmitter: function drawEmitter(t, e, i, a) {\n      var r = e.getContext(\"2d\"),\n          n = this.getStyle();\n      this.addEventListener(t, function () {\n        a && r.clearRect(0, 0, e.width, e.height), r.beginPath(), r.fillStyle = n, r.arc(i.p.x, i.p.y, 10, 0, 2 * Math.PI, !0), r.fill(), r.closePath();\n      });\n    }\n  };\n  return V.Particle = j, V.Pool = T, V.Util = P, V.ColorUtil = H, V.MathUtil = s, V.Vector2D = V.Vector = F, V.Polar2D = V.Polar = q, V.ArraySpan = Y, V.Rectangle = Z, V.Rate = K, V.ease = U, V.Span = l, V.Mat3 = X, V.getSpan = function (t, e, i) {\n    return new l(t, e, i);\n  }, V.createArraySpan = Y.createArraySpan, V.Initialize = V.Init = $, V.Life = V.L = et, V.Position = V.P = ot, V.Velocity = V.V = lt, V.Mass = V.M = ct, V.Radius = V.R = yt, V.Body = V.B = ft, V.Behaviour = gt, V.Force = V.F = bt, V.Attraction = V.A = xt, V.RandomDrift = V.RD = Pt, V.Gravity = V.G = At, V.Collision = Rt, V.CrossZone = wt, V.Alpha = St, V.Scale = V.S = Dt, V.Rotate = Mt, V.Color = Lt, V.Repulsion = Nt, V.Cyclone = zt, V.GravityWell = qt, V.Emitter = Yt, V.BehaviourEmitter = Zt, V.FollowEmitter = Kt, V.Zone = at, V.LineZone = ve, V.CircleZone = me, V.PointZone = nt, V.RectZone = _e, V.ImageZone = r, V.CanvasRenderer = ee, V.DomRenderer = ae, V.EaselRenderer = ne, V.PixiRenderer = ue, V.PixelRenderer = oe, V.WebGLRenderer = V.WebGlRenderer = C, V.CustomRenderer = $t, V.Debug = t, P.assign(V, U), V;\n});","map":null,"metadata":{},"sourceType":"script"}