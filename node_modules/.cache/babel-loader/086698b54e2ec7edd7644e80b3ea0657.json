{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.parseRelativeUrl = parseRelativeUrl;\n\nvar _utils = require(\"../../utils\");\n\nvar _querystring = require(\"./querystring\");\n\nfunction parseRelativeUrl(url, base) {\n  const globalBase = new URL(typeof window === 'undefined' ? 'http://n' : (0, _utils).getLocationOrigin());\n  const resolvedBase = base ? new URL(base, globalBase) : url.startsWith('.') ? new URL(typeof window === 'undefined' ? 'http://n' : window.location.href) : globalBase;\n  const {\n    pathname,\n    searchParams,\n    search,\n    hash,\n    href,\n    origin\n  } = new URL(url, resolvedBase);\n\n  if (origin !== globalBase.origin) {\n    throw new Error(`invariant: invalid relative URL, router received ${url}`);\n  }\n\n  return {\n    pathname,\n    query: (0, _querystring).searchParamsToUrlQuery(searchParams),\n    search,\n    hash,\n    href: href.slice(globalBase.origin.length)\n  };\n}","map":{"version":3,"mappings":"AAAA;;;;;QAkBgBA;;AAjBkB,UAAa,WAAb,aAAa,CAAb;;AACK,gBAAe,WAAf,eAAe,CAAf;;AAgBhC,SAASA,gBAAT,CACLC,GADK,EAELC,IAFK,EAGc;EACnB,MAAMC,UAAU,GAAG,IAAIC,GAAJ,CACjB,OAAOC,MAAP,KAAkB,WAAlB,GAAgC,UAAhC,GAA6CC,YAAmBA,iBAAnBA,EAD5B,CAAnB;EAIA,MAAMC,YAAY,GAAGL,IAAI,GACrB,IAAIE,GAAJ,CAAQF,IAAR,EAAcC,UAAd,CADqB,GAErBF,GAAG,CAACO,UAAJP,CAAe,GAAfA,IACA,IAAIG,GAAJ,CAAQ,OAAOC,MAAP,KAAkB,WAAlB,GAAgC,UAAhC,GAA6CA,MAAM,CAACI,QAAPJ,CAAgBK,IAArE,CADAT,GAEAE,UAJJ;EAMA,MAAM;IAAEQ,QAAF;IAAYC,YAAZ;IAA0BC,MAA1B;IAAkCC,IAAlC;IAAwCJ,IAAxC;IAA8CK;EAA9C,IAAyD,IAAIX,GAAJ,CAC7DH,GAD6D,EAE7DM,YAF6D,CAA/D;;EAIA,IAAIQ,MAAM,KAAKZ,UAAU,CAACY,MAA1B,EAAkC;IAChC,MAAM,IAAIC,KAAJ,CAAW,oDAAmDf,GAAI,EAAlE,CAAN;EACD;;EACD,OAAO;IACLU,QADK;IAELM,KAAK,EAAEC,kBAAoCA,sBAApCA,CAAuBN,YAAvBM,CAFF;IAGLL,MAHK;IAILC,IAJK;IAKLJ,IAAI,EAAEA,IAAI,CAACS,KAALT,CAAWP,UAAU,CAACY,MAAXZ,CAAkBiB,MAA7BV;EALD,CAAP;AAOD","names":["parseRelativeUrl","url","base","globalBase","URL","window","getLocationOrigin","resolvedBase","startsWith","location","href","pathname","searchParams","search","hash","origin","Error","query","searchParamsToUrlQuery","slice","length"],"sources":["../../../../../../src/shared/lib/router/utils/parse-relative-url.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}